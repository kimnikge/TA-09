import React, { useState, useEffect, lazy, Suspense, memo } from 'react'
import { supabase, testConnection } from './supabaseClient'
import type { User } from '@supabase/supabase-js'
import { BarChart3, Package, Users, LogOut, Menu, X } from 'lucide-react'
import { adaptForMobile, getDeviceInfo, isAndroid } from './utils/mobileHelpers'
import './App.css'

// Lazy loading –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –±–∞–Ω–¥–ª–∞
const AdminAccess = lazy(() => import('./admin/AdminAccess').then(module => ({ default: module.AdminAccess })))
const OrderPage = lazy(() => import('./pages/OrderPage'))
const ClientsPage = lazy(() => import('./pages/ClientsPage'))

// –£–ª—É—á—à–µ–Ω–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏
const LoadingSpinner = memo(({ message = '–ó–∞–≥—Ä—É–∑–∫–∞...' }: { message?: string }) => (
  <div className="flex items-center justify-center h-64">
    <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600"></div>
    <span className="ml-2 text-gray-600">{message}</span>
  </div>
))

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–≥–æ —Å–∫–µ–ª–µ—Ç–æ–Ω–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø–µ—Ä–≤–æ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
const InstantSkeleton = memo(() => {
  // console.log —É–±—Ä–∞–Ω –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Android
  return (
    <div className="min-h-screen bg-gray-50">
      {/* –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between h-16 items-center">
            <div className="flex items-center">
              <div className="w-8 h-8 bg-blue-200 rounded animate-pulse"></div>
              <div className="ml-3 h-6 w-48 bg-gray-200 rounded animate-pulse"></div>
            </div>
            <div className="flex space-x-4">
              <div className="h-8 w-20 bg-gray-200 rounded animate-pulse"></div>
              <div className="h-8 w-20 bg-gray-200 rounded animate-pulse"></div>
              <div className="h-8 w-24 bg-gray-200 rounded animate-pulse"></div>
            </div>
          </div>
        </div>
      </div>
      
      {/* –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="max-w-7xl mx-auto py-6 px-4">
        <div className="animate-pulse">
          <div className="h-8 w-64 bg-gray-200 rounded mb-6"></div>
          <div className="space-y-4">
            <div className="h-32 bg-gray-200 rounded"></div>
            <div className="h-32 bg-gray-200 rounded"></div>
            <div className="h-32 bg-gray-200 rounded"></div>
          </div>
        </div>
      </div>
    </div>
  )
})

function App() {
  // console.log —É–±—Ä–∞–Ω –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Android
  const [currentPage, setCurrentPage] = useState<'order' | 'clients' | 'admin'>('order')
  const [user, setUser] = useState<User | null>(null)
  const [loading, setLoading] = useState(true)
  const [userRole, setUserRole] = useState<'admin' | 'sales_rep'>('sales_rep')
  const [mobileMenuOpen, setMobileMenuOpen] = useState(false)
  
  // console.log —É–±—Ä–∞–Ω –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Android
  
  // –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ñ–æ—Ä–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  const [authMode, setAuthMode] = useState<'signin' | 'signup'>('signin')
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const [fullName, setFullName] = useState('')
  const [authLoading, setAuthLoading] = useState(false)
  const [authError, setAuthError] = useState('')

  // –ú–æ–±–∏–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  useEffect(() => {
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –º–æ–±–∏–ª—å–Ω—É—é –∞–¥–∞–ø—Ç–∞—Ü–∏—é
    adaptForMobile()
    
    // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ (—Ç–æ–ª—å–∫–æ –≤ development)
    if (process.env.NODE_ENV === 'development') {
      const deviceInfo = getDeviceInfo()
      console.log('üì± –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ:', deviceInfo)
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase (–Ω–µ –±–ª–æ–∫–∏—Ä—É–µ—Ç UI)
    testConnection()
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω
    const hideLoadingScreen = () => {
      const loadingScreen = document.getElementById('loading-screen')
      if (loadingScreen) {
        loadingScreen.style.display = 'none'
        if (process.env.NODE_ENV === 'development') {
          console.log('‚úÖ –ó–∞–≥—Ä—É–∑–æ—á–Ω—ã–π —ç–∫—Ä–∞–Ω —Å–∫—Ä—ã—Ç')
        }
      }
    }
    
    // –î–ª—è Android –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–º–µ–Ω—å—à–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
    const timer = setTimeout(hideLoadingScreen, isAndroid() ? 300 : 1500)
    
    return () => clearTimeout(timer)
  }, [])

  useEffect(() => {
    if (process.env.NODE_ENV === 'development') {
      console.log('üîê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏...')
    }
    
    // –¢–∞–π–º–µ—Ä –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - –¥–ª—è Android –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —É–º–µ–Ω—å—à–∞–µ–º –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
    const safetyTimer = setTimeout(() => {
      if (process.env.NODE_ENV === 'development') {
        console.log('‚è∞ –¢–∞–π–º–µ—Ä –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–±–∏—Ä–∞–µ–º loading (–±—ã—Å—Ç—Ä–∞—è –∑–∞–≥—Ä—É–∑–∫–∞)')
      }
      setLoading(false)
    }, isAndroid() ? 200 : 500) // Android: 200–º—Å, –æ—Å—Ç–∞–ª—å–Ω—ã–µ: 500–º—Å
    
    // –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –µ–≥–æ —Ä–æ–ª—å
    const getUserAndRole = async (currentUser: User | null) => {
      if (currentUser) {
        try {
          if (process.env.NODE_ENV === 'development') {
            console.log('üë§ –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', currentUser.email)
          }
          
          // –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ profiles
          const { data: profile, error } = await supabase
            .from('profiles')
            .select('role')
            .eq('id', currentUser.id)
            .single()
          
          if (error) {
            if (process.env.NODE_ENV === 'development') {
              console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
            }
            setUserRole('sales_rep') // –†–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            return
          }
          
          if (profile?.role === 'admin') {
            setUserRole('admin')
            if (process.env.NODE_ENV === 'development') {
              console.log('üëë –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä')
            }
          } else {
            setUserRole('sales_rep')
            if (process.env.NODE_ENV === 'development') {
              console.log('üë®‚Äçüíº –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - —Ç–æ—Ä–≥–æ–≤—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å')
            }
          }
        } catch (error) {
          if (process.env.NODE_ENV === 'development') {
            console.warn('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
          }
          setUserRole('sales_rep')
        }
      } else {
        setUserRole('sales_rep')
      }
    }

    // –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ë–ï–ó –±–ª–æ–∫–∏—Ä—É—é—â–µ–≥–æ await
    const getUser = () => {
      if (process.env.NODE_ENV === 'development') {
        console.log('üîç –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
      }
      
      // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ —É–±–∏—Ä–∞–µ–º loading –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
      setLoading(false)
      clearTimeout(safetyTimer)
      
      // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ñ–æ–Ω–µ
      supabase.auth.getUser()
        .then(({ data: { user }, error }) => {
          if (error) {
            if (process.env.NODE_ENV === 'development') {
              console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error.message)
            }
            setUser(null)
            setUserRole('sales_rep')
          } else {
            if (process.env.NODE_ENV === 'development') {
              console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–µ–Ω:', user?.email || '–ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
            }
            setUser(user)
            // –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å
            if (user) {
              getUserAndRole(user)
            }
          }
        })
        .catch(error => {
          if (process.env.NODE_ENV === 'development') {
            console.warn('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error)
          }
          setUser(null)
          setUserRole('sales_rep')
        })
    }

    // –°–ª—É—à–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const { data: { subscription } } = supabase.auth.onAuthStateChange(async (event, session) => {
      if (process.env.NODE_ENV === 'development') {
        console.log('üîÑ Auth state change:', event, session?.user?.email)
      }
      const currentUser = session?.user ?? null
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
      if (event === 'SIGNED_OUT') {
        setUser(null)
        setUserRole('sales_rep')
        return
      }
      
      // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏ —Ç–æ–∫–µ–Ω–∞
      if (event === 'TOKEN_REFRESHED' && !session) {
        if (process.env.NODE_ENV === 'development') {
          console.warn('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Å–∏—Å—Ç–µ–º—ã')
        }
        await supabase.auth.signOut()
        setUser(null)
        setUserRole('sales_rep')
        return
      }
      
      setUser(currentUser)
      await getUserAndRole(currentUser)
    })

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    getUser()

    // –û—á–∏—â–∞–µ–º —Ç–∞–π–º–µ—Ä –∏ –ø–æ–¥–ø–∏—Å–∫—É –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      clearTimeout(safetyTimer)
      subscription.unsubscribe()
    }
  }, [])

  const currentUser = {
    id: user?.id || '',
    name: user?.user_metadata?.full_name || user?.email?.split('@')[0] || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    email: user?.email || ''
  }

  const handleLogout = async () => {
    await supabase.auth.signOut()
    setCurrentPage('order')
  }

  const handleAuth = async (e: React.FormEvent) => {
    e.preventDefault()
    setAuthLoading(true)
    setAuthError('')

    try {
      // –û—á–∏—â–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –ø–µ—Ä–µ–¥ –≤—Ö–æ–¥–æ–º
      const { data: currentSession } = await supabase.auth.getSession()
      if (currentSession.session && authMode === 'signin') {
        // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–µ—Å—Å–∏—è, –Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—ã—Ç–∞–µ—Ç—Å—è –≤–æ–π—Ç–∏ —Å–Ω–æ–≤–∞, –æ—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—É—é —Å–µ—Å—Å–∏—é
        await supabase.auth.signOut()
      }

      if (authMode === 'signin') {
        const { error } = await supabase.auth.signInWithPassword({
          email,
          password,
        })
        if (error) throw error
      } else {
        // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const { data, error } = await supabase.auth.signUp({
          email,
          password,
          options: {
            data: {
              full_name: fullName,
            }
          }
        })
        
        if (error) throw error
        
        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω, –ø—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å
        if (data.user) {
          if (process.env.NODE_ENV === 'development') {
            console.log('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω, —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å...', data.user.id)
          }
          
          // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å auth.users
          await new Promise(resolve => setTimeout(resolve, 1000))
          
          // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑
          let profileCreated = false
          let attempts = 0
          const maxAttempts = 3
          
          while (!profileCreated && attempts < maxAttempts) {
            attempts++
            if (process.env.NODE_ENV === 'development') {
              console.log(`–ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è ${attempts}/${maxAttempts}`)
            }
            
            try {
              const { data: newProfile, error: profileError } = await supabase
                .from('profiles')
                .insert({
                  id: data.user.id,
                  email: email,
                  name: fullName,
                  role: 'sales_rep',
                  approved: false
                })
                .select()
                .single()
              
              if (profileError) {
                if (process.env.NODE_ENV === 'development') {
                  console.error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è (–ø–æ–ø—ã—Ç–∫–∞ ${attempts}):`, profileError)
                }
                
                if (attempts === maxAttempts) {
                  // –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ –Ω–µ—É–¥–∞—á–Ω–∞
                  setAuthError(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å. –ö–æ–¥ –æ—à–∏–±–∫–∏: ${profileError.code}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.`)
                  break
                } else {
                  // –ñ–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π
                  await new Promise(resolve => setTimeout(resolve, 2000))
                }
              } else {
                if (process.env.NODE_ENV === 'development') {
                  console.log('–ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ:', newProfile)
                }
                profileCreated = true
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                setAuthError('')
              }
            } catch (err) {
              if (process.env.NODE_ENV === 'development') {
                console.error(`–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è (–ø–æ–ø—ã—Ç–∫–∞ ${attempts}):`, err)
              }
              if (attempts === maxAttempts) {
                setAuthError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.')
              }
            }
          }
        }
      }
    } catch (error: unknown) {
      setAuthError(error instanceof Error ? error.message : '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
    } finally {
      setAuthLoading(false)
    }
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º InstantSkeleton —Ç–æ–ª—å–∫–æ –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
  if (loading) {
    return <InstantSkeleton />
  }

  if (!user) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="max-w-md w-full bg-white rounded-lg shadow-md p-8">
          <div className="text-center mb-6">
            <Package className="w-16 h-16 text-blue-600 mx-auto mb-4" />
            <h1 className="text-2xl font-bold text-gray-900 mb-2">
              –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏
            </h1>
            <p className="text-gray-600">
              {authMode === 'signin' ? '–í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É' : '–°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç'}
            </p>
          </div>

          <form onSubmit={handleAuth} className="space-y-4">
            {authMode === 'signup' && (
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-1">
                  –ü–æ–ª–Ω–æ–µ –∏–º—è
                </label>
                <input
                  type="text"
                  value={fullName}
                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => setFullName(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                  placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤"
                  required
                  disabled={authLoading}
                  minLength={2}
                />
              </div>
            )}

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                Email
              </label>
              <input
                type="email"
                value={email}
                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setEmail(e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="your@email.com"
                required
                disabled={authLoading}
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –ü–∞—Ä–æ–ª—å
              </label>
              <input
                type="password"
                value={password}
                onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPassword(e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å"
                required
                disabled={authLoading}
                minLength={6}
              />
            </div>

            {authError && (
              <div className="bg-red-50 border border-red-200 rounded-md p-3">
                <p className="text-sm text-red-600">{authError}</p>
              </div>
            )}

            <button
              type="submit"
              disabled={authLoading}
              className="w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors disabled:opacity-50 disabled:cursor-not-allowed"
            >
              {authLoading ? (
                <div className="flex items-center justify-center">
                  <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
                  {authMode === 'signin' ? '–í—Ö–æ–¥...' : '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è...'}
                </div>
              ) : (
                authMode === 'signin' ? '–í–æ–π—Ç–∏' : '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'
              )}
            </button>
          </form>

          <div className="mt-4 text-center">
            <button
              onClick={() => {
                setAuthMode(authMode === 'signin' ? 'signup' : 'signin')
                setAuthError('')
                setEmail('')
                setPassword('')
                setFullName('')
              }}
              className="text-sm text-blue-600 hover:text-blue-800"
            >
              {authMode === 'signin' 
                ? '–ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'
                : '–£–∂–µ –µ—Å—Ç—å –∞–∫–∫–∞—É–Ω—Ç? –í–æ–π—Ç–∏'
              }
            </button>
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="min-h-screen bg-gray-50">
      {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
      <nav className="bg-white shadow-sm border-b sticky top-0 z-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between h-16">
            <div className="flex items-center min-w-0 flex-1">
              <Package className="w-6 h-6 sm:w-8 sm:h-8 text-blue-600 mr-2 sm:mr-3 flex-shrink-0" />
              <h1 className="text-sm sm:text-lg md:text-xl font-semibold text-gray-900 truncate">
                –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏
              </h1>
            </div>
            
            {/* –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
            <div className="hidden lg:flex items-center space-x-1">
              <button
                onClick={() => setCurrentPage('order')}
                className={`px-2 lg:px-3 py-2 rounded-md text-xs lg:text-sm font-medium transition-colors whitespace-nowrap ${
                  currentPage === 'order'
                    ? 'bg-blue-100 text-blue-700'
                    : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'
                }`}
              >
                <Package className="w-3 h-3 lg:w-4 lg:h-4 inline mr-1 lg:mr-2" />
                –ó–∞–∫–∞–∑—ã
              </button>
              
              <button
                onClick={() => setCurrentPage('clients')}
                className={`px-2 lg:px-3 py-2 rounded-md text-xs lg:text-sm font-medium transition-colors whitespace-nowrap ${
                  currentPage === 'clients'
                    ? 'bg-blue-100 text-blue-700'
                    : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'
                }`}
              >
                <Users className="w-3 h-3 lg:w-4 lg:h-4 inline mr-1 lg:mr-2" />
                –ö–ª–∏–µ–Ω—Ç—ã
              </button>
              
              {userRole === 'admin' && (
                <button
                  onClick={() => setCurrentPage('admin')}
                  className={`px-2 lg:px-3 py-2 rounded-md text-xs lg:text-sm font-medium transition-colors whitespace-nowrap ${
                    currentPage === 'admin'
                      ? 'bg-blue-100 text-blue-700'
                      : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'
                  }`}
                >
                  <BarChart3 className="w-3 h-3 lg:w-4 lg:h-4 inline mr-1 lg:mr-2" />
                  –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
                </button>
              )}
            </div>
            
            {/* –ü–ª–∞–Ω—à–µ—Ç–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è (—Å—Ä–µ–¥–Ω–∏–µ —ç–∫—Ä–∞–Ω—ã) */}
            <div className="hidden md:flex lg:hidden items-center space-x-1">
              <button
                onClick={() => setCurrentPage('order')}
                className={`p-2 rounded-md transition-colors ${
                  currentPage === 'order'
                    ? 'bg-blue-100 text-blue-700'
                    : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'
                }`}
                title="–ó–∞–∫–∞–∑—ã"
              >
                <Package className="w-5 h-5" />
              </button>
              
              <button
                onClick={() => setCurrentPage('clients')}
                className={`p-2 rounded-md transition-colors ${
                  currentPage === 'clients'
                    ? 'bg-blue-100 text-blue-700'
                    : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'
                }`}
                title="–ö–ª–∏–µ–Ω—Ç—ã"
              >
                <Users className="w-5 h-5" />
              </button>
              
              {userRole === 'admin' && (
                <button
                  onClick={() => setCurrentPage('admin')}
                  className={`p-2 rounded-md transition-colors ${
                    currentPage === 'admin'
                      ? 'bg-blue-100 text-blue-700'
                      : 'text-gray-500 hover:text-gray-700 hover:bg-gray-50'
                  }`}
                  title="–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"
                >
                  <BarChart3 className="w-5 h-5" />
                </button>
              )}
            </div>
            
            {/* –ú–æ–±–∏–ª—å–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
            <div className="md:hidden flex items-center">
              <button
                onClick={() => setMobileMenuOpen(!mobileMenuOpen)}
                className="p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 transition-colors"
              >
                {mobileMenuOpen ? <X className="w-6 h-6" /> : <Menu className="w-6 h-6" />}
              </button>
            </div>
            
            {/* –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏ –≤—ã—Ö–æ–¥ */}
            <div className="hidden lg:flex items-center space-x-4">
              <span className="text-xs lg:text-sm text-gray-700 truncate max-w-24 lg:max-w-32">
                {currentUser.name}
              </span>
              <button
                onClick={handleLogout}
                className="flex items-center text-xs lg:text-sm text-gray-500 hover:text-gray-700 px-2 py-1 rounded hover:bg-gray-50 transition-colors"
              >
                <LogOut className="w-3 h-3 lg:w-4 lg:h-4 mr-1" />
                –í—ã–π—Ç–∏
              </button>
            </div>
          </div>
          
          {/* –ú–æ–±–∏–ª—å–Ω–æ–µ –º–µ–Ω—é */}
          {mobileMenuOpen && (
            <div className="md:hidden border-t border-gray-200 bg-white">
              <div className="pt-2 pb-3 space-y-1 px-4">
                <button
                  onClick={() => {
                    setCurrentPage('order');
                    setMobileMenuOpen(false);
                  }}
                  className={`w-full text-left px-3 py-3 rounded-md text-base font-medium transition-colors flex items-center ${
                    currentPage === 'order'
                      ? 'bg-blue-100 text-blue-700'
                      : 'text-gray-700 hover:text-gray-900 hover:bg-gray-50'
                  }`}
                >
                  <Package className="w-5 h-5 mr-3 flex-shrink-0" />
                  –ó–∞–∫–∞–∑—ã
                </button>
                
                <button
                  onClick={() => {
                    setCurrentPage('clients');
                    setMobileMenuOpen(false);
                  }}
                  className={`w-full text-left px-3 py-3 rounded-md text-base font-medium transition-colors flex items-center ${
                    currentPage === 'clients'
                      ? 'bg-blue-100 text-blue-700'
                      : 'text-gray-700 hover:text-gray-900 hover:bg-gray-50'
                  }`}
                >
                  <Users className="w-5 h-5 mr-3 flex-shrink-0" />
                  –ö–ª–∏–µ–Ω—Ç—ã
                </button>
                
                {userRole === 'admin' && (
                  <button
                    onClick={() => {
                      setCurrentPage('admin');
                      setMobileMenuOpen(false);
                    }}
                    className={`w-full text-left px-3 py-3 rounded-md text-base font-medium transition-colors flex items-center ${
                      currentPage === 'admin'
                        ? 'bg-blue-100 text-blue-700'
                        : 'text-gray-700 hover:text-gray-900 hover:bg-gray-50'
                    }`}
                  >
                    <BarChart3 className="w-5 h-5 mr-3 flex-shrink-0" />
                    –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
                  </button>
                )}
                
                {/* –ú–æ–±–∏–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
                <div className="border-t border-gray-200 pt-4 mt-4">
                  <div className="px-3 py-2">
                    <p className="text-base font-medium text-gray-900 truncate">{currentUser.name}</p>
                    <p className="text-sm text-gray-500 truncate">{currentUser.email}</p>
                  </div>
                  <button
                    onClick={handleLogout}
                    className="w-full text-left px-3 py-3 text-base text-gray-700 hover:text-gray-900 hover:bg-gray-50 flex items-center transition-colors"
                  >
                    <LogOut className="w-5 h-5 mr-3 flex-shrink-0" />
                    –í—ã–π—Ç–∏
                  </button>
                </div>
              </div>
            </div>
          )}
        </div>
      </nav>

      {/* –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ - —Å—Ç—Ä–æ–≥–∏–π —É—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ */}
      <main className="max-w-7xl mx-auto py-4 sm:py-6 px-4 sm:px-6 lg:px-8">
        <Suspense fallback={<LoadingSpinner />}>
          {currentPage === 'order' && (
            <OrderPage currentUser={currentUser} userRole={userRole} />
          )}
          
          {currentPage === 'clients' && (
            <ClientsPage currentUser={currentUser} userRole={userRole} />
          )}
          
          {currentPage === 'admin' && (
            <AdminAccess />
          )}
        </Suspense>
      </main>
    </div>
  )
}

export default App
