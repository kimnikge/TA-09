import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React, { useState, useEffect } from 'react';
import { Users, Package, ShoppingCart, BarChart3, Settings, FileText, Plus, Edit, Trash2, CheckCircle, Clock, UserX } from 'lucide-react';
import { supabase } from '../supabaseClient';
const AdminPage = () => {
    const [activeTab, setActiveTab] = useState('dashboard');
    const [users, setUsers] = useState([]);
    const [loading, setLoading] = useState(true);
    const [message, setMessage] = useState('');
    const [showModal, setShowModal] = useState(false);
    const [modalType, setModalType] = useState('');
    const [searchTerm, setSearchTerm] = useState('');
    const [selectedItem, setSelectedItem] = useState(null);
    const navigationTabs = [
        { id: 'dashboard', label: 'Дашборд', icon: BarChart3 },
        { id: 'users', label: 'Пользователи', icon: Users },
        { id: 'products', label: 'Товары', icon: Package },
        { id: 'orders', label: 'Заказы', icon: ShoppingCart },
        { id: 'clients', label: 'Клиенты', icon: Users },
        { id: 'reports', label: 'Отчеты', icon: FileText },
        { id: 'settings', label: 'Настройки', icon: Settings },
    ];
    const loadUsers = async () => {
        try {
            setLoading(true);
            // Демо-данные для показа интерфейса
            setUsers([
                { id: '1', name: 'Алексей Петров', email: 'alexey@example.com', role: 'sales_rep', status: 'active', lastActive: '2024-06-28', orders: 45 },
                { id: '2', name: 'Мария Сидорова', email: 'maria@example.com', role: 'sales_rep', status: 'pending', lastActive: '2024-06-27', orders: 32 },
                { id: '3', name: 'Дмитрий Козлов', email: 'dmitry@example.com', role: 'sales_rep', status: 'inactive', lastActive: '2024-06-25', orders: 12 }
            ]);
        }
        catch (error) {
            setMessage('Ошибка загрузки пользователей: ' + error.message);
        }
        finally {
            setLoading(false);
        }
    };
    const blockUser = async (userId) => {
        try {
            const { error } = await supabase
                .from('profiles')
                .update({ approved: false })
                .eq('id', userId);
            if (error)
                throw error;
            setMessage('Пользователь заблокирован');
            setTimeout(() => setMessage(''), 3000);
            await loadUsers();
        }
        catch (error) {
            setMessage('Ошибка блокировки: ' + error.message);
        }
    };
    const renderDashboard = () => (_jsxs("div", { children: [_jsx("h2", { className: "text-2xl font-semibold mb-4 text-gray-700", children: "\u0414\u0430\u0448\u0431\u043E\u0440\u0434" }), _jsxs("div", { className: "grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4", children: [_jsx("div", { className: "bg-white p-4 rounded-lg shadow-md", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold text-gray-800", children: "\u0412\u0441\u0435\u0433\u043E \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439" }), _jsx("p", { className: "text-2xl font-bold text-gray-900", children: users.length })] }), _jsx(Users, { className: "w-10 h-10 text-blue-500" })] }) }), _jsx("div", { className: "bg-white p-4 rounded-lg shadow-md", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold text-gray-800", children: "\u0410\u043A\u0442\u0438\u0432\u043D\u044B\u0435 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u0438" }), _jsx("p", { className: "text-2xl font-bold text-gray-900", children: users.filter(user => user.status === 'active').length })] }), _jsx(CheckCircle, { className: "w-10 h-10 text-green-500" })] }) }), _jsx("div", { className: "bg-white p-4 rounded-lg shadow-md", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold text-gray-800", children: "\u041E\u0436\u0438\u0434\u0430\u044E\u0449\u0438\u0435 \u043F\u043E\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043D\u0438\u044F" }), _jsx("p", { className: "text-2xl font-bold text-gray-900", children: users.filter(user => user.status === 'pending').length })] }), _jsx(Clock, { className: "w-10 h-10 text-yellow-500" })] }) }), _jsx("div", { className: "bg-white p-4 rounded-lg shadow-md", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-lg font-semibold text-gray-800", children: "\u0417\u0430\u0431\u043B\u043E\u043A\u0438\u0440\u043E\u0432\u0430\u043D\u043D\u044B\u0435 \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u0438" }), _jsx("p", { className: "text-2xl font-bold text-gray-900", children: users.filter(user => user.status === 'inactive').length })] }), _jsx(UserX, { className: "w-10 h-10 text-red-500" })] }) })] })] }));
    const renderUsers = () => (_jsxs("div", { children: [_jsx("h2", { className: "text-2xl font-semibold mb-4 text-gray-700", children: "\u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u0438" }), _jsxs("div", { className: "mb-4 flex flex-col sm:flex-row sm:items-center", children: [_jsx("div", { className: "flex-1 min-w-0", children: _jsx("input", { type: "text", placeholder: "\u041F\u043E\u0438\u0441\u043A \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u0435\u0439...", value: searchTerm, onChange: (e) => setSearchTerm(e.target.value), className: "block w-full px-3 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:outline-none" }) }), _jsxs("button", { onClick: () => {
                            setModalType('addUser');
                            setShowModal(true);
                        }, className: "mt-3 sm:mt-0 sm:ml-3 inline-flex items-center justify-center px-4 py-2 rounded-lg bg-blue-600 text-white font-medium shadow-md hover:bg-blue-700 transition-colors", children: [_jsx(Plus, { className: "w-5 h-5 mr-2" }), "\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F"] })] }), message && (_jsx("div", { className: `mb-4 p-4 rounded-lg ${message.includes('Ошибка')
                    ? 'bg-red-100 text-red-700 border border-red-300'
                    : 'bg-green-100 text-green-700 border border-green-300'}`, children: message })), _jsx("div", { className: "bg-white rounded-lg shadow-md", children: _jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "min-w-full divide-y divide-gray-200", children: [_jsx("thead", { className: "bg-gray-50", children: _jsxs("tr", { children: [_jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "\u0418\u043C\u044F" }), _jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Email" }), _jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "\u0420\u043E\u043B\u044C" }), _jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "\u0421\u0442\u0430\u0442\u0443\u0441" }), _jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "\u0414\u0435\u0439\u0441\u0442\u0432\u0438\u044F" })] }) }), _jsx("tbody", { className: "bg-white divide-y divide-gray-200", children: users.filter(user => user.name.toLowerCase().includes(searchTerm.toLowerCase())).map((user) => (_jsxs("tr", { children: [_jsx("td", { className: "px-6 py-4 whitespace-nowrap", children: _jsxs("div", { className: "flex items-center", children: [_jsx("div", { className: "h-10 w-10 rounded-full bg-gray-100 flex items-center justify-center mr-4", children: _jsx("span", { className: "text-gray-500 font-medium", children: user.name.charAt(0) }) }), _jsxs("div", { className: "min-w-0 flex-1", children: [_jsx("p", { className: "text-sm font-medium text-gray-900 truncate", children: user.name }), _jsx("p", { className: "text-sm text-gray-500 truncate", children: user.email })] })] }) }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap", children: _jsx("p", { className: "text-sm text-gray-500", children: user.email }) }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap", children: _jsx("span", { className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${user.role === 'admin' ? 'bg-green-100 text-green-800' : 'bg-blue-100 text-blue-800'}`, children: user.role === 'admin' ? 'Администратор' : 'Торговый представитель' }) }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap", children: _jsx("span", { className: `inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${user.status === 'active' ? 'bg-green-100 text-green-800' : user.status === 'pending' ? 'bg-yellow-100 text-yellow-800' : 'bg-red-100 text-red-800'}`, children: user.status === 'active' ? 'Активен' : user.status === 'pending' ? 'Ожидает' : 'Заблокирован' }) }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap text-right text-sm font-medium", children: _jsxs("div", { className: "flex justify-end gap-2", children: [_jsx("button", { onClick: () => {
                                                            setSelectedItem(user);
                                                            setModalType('editUser');
                                                            setShowModal(true);
                                                        }, className: "text-blue-600 hover:text-blue-800", title: "\u0420\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C", children: _jsx(Edit, { className: "w-5 h-5" }) }), _jsx("button", { onClick: () => blockUser(user.id), className: "text-red-600 hover:text-red-800", title: "\u0417\u0430\u0431\u043B\u043E\u043A\u0438\u0440\u043E\u0432\u0430\u0442\u044C", children: _jsx(Trash2, { className: "w-5 h-5" }) })] }) })] }, user.id))) })] }) }) })] }));
    const renderProducts = () => (_jsx("div", { children: _jsx("h2", { className: "text-2xl font-semibold mb-4 text-gray-700", children: "\u0422\u043E\u0432\u0430\u0440\u044B" }) }));
    const renderOrders = () => (_jsx("div", { children: _jsx("h2", { className: "text-2xl font-semibold mb-4 text-gray-700", children: "\u0417\u0430\u043A\u0430\u0437\u044B" }) }));
    const renderClients = () => (_jsx("div", { children: _jsx("h2", { className: "text-2xl font-semibold mb-4 text-gray-700", children: "\u041A\u043B\u0438\u0435\u043D\u0442\u044B" }) }));
    const renderModal = () => {
        switch (modalType) {
            case 'addUser':
                return (_jsx("div", { className: `fixed inset-0 z-50 overflow-y-auto ${showModal ? '' : 'hidden'}`, children: _jsx("div", { className: "flex items-center justify-center min-h-screen", children: _jsxs("div", { className: "bg-white rounded-lg shadow-lg p-6 max-w-md w-full", children: [_jsx("h3", { className: "text-lg font-semibold mb-4", children: "\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "\u0418\u043C\u044F" }), _jsx("input", { type: "text", className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent", placeholder: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0438\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Email" }), _jsx("input", { type: "email", className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent", placeholder: "example@company.com" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "\u0420\u043E\u043B\u044C" }), _jsxs("select", { className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent", children: [_jsx("option", { value: "sales_rep", children: "\u0422\u043E\u0440\u0433\u043E\u0432\u044B\u0439 \u043F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u0442\u0435\u043B\u044C" }), _jsx("option", { value: "admin", children: "\u0410\u0434\u043C\u0438\u043D\u0438\u0441\u0442\u0440\u0430\u0442\u043E\u0440" })] })] })] }), _jsxs("div", { className: "flex justify-end gap-2", children: [_jsx("button", { onClick: () => setShowModal(false), className: "px-4 py-2 rounded-lg bg-gray-200 text-gray-700 font-medium hover:bg-gray-300 transition-colors", children: "\u041E\u0442\u043C\u0435\u043D\u0430" }), _jsx("button", { onClick: () => {
                                                // ...логика добавления пользователя...
                                                setShowModal(false);
                                            }, className: "px-4 py-2 rounded-lg bg-blue-600 text-white font-medium hover:bg-blue-700 transition-colors", children: "\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C" })] })] }) }) }));
            case 'editUser':
                return (_jsx("div", { className: `fixed inset-0 z-50 overflow-y-auto ${showModal ? '' : 'hidden'}`, children: _jsx("div", { className: "flex items-center justify-center min-h-screen", children: _jsxs("div", { className: "bg-white rounded-lg shadow-lg p-6 max-w-md w-full", children: [_jsx("h3", { className: "text-lg font-semibold mb-4", children: "\u0420\u0435\u0434\u0430\u043A\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F" }), selectedItem && (_jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "\u0418\u043C\u044F" }), _jsx("input", { type: "text", defaultValue: selectedItem.name, className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Email" }), _jsx("input", { type: "email", defaultValue: selectedItem.email, className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent" })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "\u0420\u043E\u043B\u044C" }), _jsxs("select", { defaultValue: selectedItem.role, className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent", children: [_jsx("option", { value: "sales_rep", children: "\u0422\u043E\u0440\u0433\u043E\u0432\u044B\u0439 \u043F\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u0438\u0442\u0435\u043B\u044C" }), _jsx("option", { value: "admin", children: "\u0410\u0434\u043C\u0438\u043D\u0438\u0441\u0442\u0440\u0430\u0442\u043E\u0440" })] })] })] })), _jsxs("div", { className: "flex justify-end gap-2", children: [_jsx("button", { onClick: () => setShowModal(false), className: "px-4 py-2 rounded-lg bg-gray-200 text-gray-700 font-medium hover:bg-gray-300 transition-colors", children: "\u041E\u0442\u043C\u0435\u043D\u0430" }), _jsx("button", { onClick: () => {
                                                // ...логика редактирования пользователя...
                                                setShowModal(false);
                                            }, className: "px-4 py-2 rounded-lg bg-blue-600 text-white font-medium hover:bg-blue-700 transition-colors", children: "\u0421\u043E\u0445\u0440\u0430\u043D\u0438\u0442\u044C" })] })] }) }) }));
            default:
                return null;
        }
    };
    useEffect(() => {
        loadUsers();
    }, []);
    if (loading) {
        return (_jsx("div", { className: "p-4 flex justify-center items-center", children: _jsx("div", { className: "text-lg", children: "\u0417\u0430\u0433\u0440\u0443\u0437\u043A\u0430..." }) }));
    }
    return (_jsxs("div", { className: "min-h-screen bg-gray-50", children: [_jsx("header", { className: "bg-white shadow-sm border-b border-gray-200", children: _jsx("div", { className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8", children: _jsxs("div", { className: "flex justify-between items-center h-16", children: [_jsx("div", { className: "flex items-center space-x-4", children: _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("div", { className: "w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center", children: _jsx(Package, { className: "w-5 h-5 text-white" }) }), _jsx("h1", { className: "text-xl font-semibold text-gray-900", children: "\u0410\u0434\u043C\u0438\u043D-\u043F\u0430\u043D\u0435\u043B\u044C" })] }) }), _jsx("div", { className: "flex items-center space-x-4", children: _jsxs("div", { className: "flex items-center space-x-2", children: [_jsx("div", { className: "w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center", children: _jsx("span", { className: "text-sm font-medium text-blue-600", children: "\u0410\u041F" }) }), _jsx("span", { className: "text-sm font-medium text-gray-700", children: "\u0410\u0434\u043C\u0438\u043D \u041F\u0430\u043D\u0435\u043B\u044C" })] }) })] }) }) }), _jsx("div", { className: "max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8", children: _jsxs("div", { className: "flex space-x-8", children: [_jsx("div", { className: "w-64 flex-shrink-0", children: _jsx("nav", { className: "bg-white rounded-xl shadow-sm border border-gray-200 p-4", children: _jsx("div", { className: "space-y-2", children: navigationTabs.map((tab) => (_jsxs("button", { onClick: () => setActiveTab(tab.id), className: `w-full flex items-center space-x-3 px-3 py-2 rounded-lg text-left transition-colors ${activeTab === tab.id
                                            ? 'bg-blue-50 text-blue-600 border border-blue-200'
                                            : 'text-gray-700 hover:bg-gray-50'}`, children: [_jsx(tab.icon, { className: "w-5 h-5" }), _jsx("span", { className: "font-medium", children: tab.label })] }, tab.id))) }) }) }), _jsxs("div", { className: "flex-1", children: [activeTab === 'dashboard' && renderDashboard(), activeTab === 'users' && renderUsers(), activeTab === 'products' && renderProducts(), activeTab === 'orders' && renderOrders(), activeTab === 'clients' && renderClients(), activeTab === 'reports' && (_jsxs("div", { className: "text-center py-12", children: [_jsx(FileText, { className: "w-12 h-12 text-gray-400 mx-auto mb-4" }), _jsx("h3", { className: "text-lg font-medium text-gray-900 mb-2", children: "\u041E\u0442\u0447\u0435\u0442\u044B" }), _jsx("p", { className: "text-gray-600", children: "\u0420\u0430\u0437\u0434\u0435\u043B \u043E\u0442\u0447\u0435\u0442\u043E\u0432 \u0432 \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0435" })] })), activeTab === 'settings' && (_jsxs("div", { className: "text-center py-12", children: [_jsx(Settings, { className: "w-12 h-12 text-gray-400 mx-auto mb-4" }), _jsx("h3", { className: "text-lg font-medium text-gray-900 mb-2", children: "\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438" }), _jsx("p", { className: "text-gray-600", children: "\u0420\u0430\u0437\u0434\u0435\u043B \u043D\u0430\u0441\u0442\u0440\u043E\u0435\u043A \u0432 \u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0435" })] }))] })] }) }), renderModal()] }));
};
export default AdminPage;
