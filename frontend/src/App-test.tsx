import { useState, useEffect } from 'react'
import './App.css'

function App() {
  const [showModal, setShowModal] = useState<'login' | 'register' | null>(null)
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const [message, setMessage] = useState('')

  const resetForm = () => {
    setEmail('')
    setPassword('')
    setMessage('')
    setShowModal(null)
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∞–≤–∏—à–∏ Escape
  useEffect(() => {
    const handleEscape = (e: KeyboardEvent) => {
      if (e.key === 'Escape' && showModal) {
        resetForm()
      }
    }

    document.addEventListener('keydown', handleEscape)
    return () => document.removeEventListener('keydown', handleEscape)
  }, [showModal])

  const handleRegister = async () => {
    if (!email || !password) {
      setMessage('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è')
      return
    }
    // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º Supabase –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    setMessage('–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)')
    setTimeout(resetForm, 2000)
  }

  const handleLogin = async () => {
    if (!email || !password) {
      setMessage('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è')
      return
    }
    // –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º Supabase –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    setMessage('–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω! (—Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)')
    setTimeout(resetForm, 1000)
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-indigo-500 via-purple-500 to-purple-600 p-5 flex items-center justify-content">
      <div className="bg-white bg-opacity-95 backdrop-blur-lg rounded-3xl p-8 md:p-12 text-center shadow-2xl max-w-lg w-full transition-transform duration-300 hover:-translate-y-1">
        <h1 className="text-3xl md:text-4xl font-bold mb-4 bg-gradient-to-r from-indigo-500 to-purple-600 bg-clip-text text-transparent">
          –§–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞
        </h1>
        <p className="text-base md:text-lg text-slate-600 mb-8 md:mb-10 leading-relaxed">
          –ë—ã—Å—Ç—Ä–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –∏ —Ç–æ–≤–∞—Ä–∞–º–∏.<br className="hidden md:block" />
          –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–±–æ—Ç—ã.
        </p>
        
        <div className="flex flex-col md:flex-row gap-4 mb-8 md:mb-10">
          <button
            className="flex-1 py-4 px-6 bg-gradient-to-r from-indigo-500 to-purple-600 text-white font-semibold rounded-xl shadow-lg hover:shadow-xl transition-all duration-300 hover:-translate-y-0.5 flex items-center justify-center gap-2"
            onClick={() => setShowModal('login')}
          >
            üîë –í–æ–π—Ç–∏
          </button>
          <button
            className="flex-1 py-4 px-6 bg-indigo-50 text-indigo-600 font-semibold rounded-xl border-2 border-indigo-200 hover:bg-indigo-100 transition-all duration-300 hover:-translate-y-0.5 flex items-center justify-center gap-2"
            onClick={() => setShowModal('register')}
          >
            ‚ú® –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
          </button>
        </div>
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
      {showModal && (
        <div 
          className="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm flex items-center justify-center p-5 z-50 animate-fade-in"
          onClick={(e) => e.target === e.currentTarget && resetForm()}
        >
          <div className="bg-white rounded-2xl p-6 md:p-10 w-full max-w-md mx-auto shadow-2xl transform scale-90 animate-modal-slide relative">
            <button
              onClick={resetForm}
              className="absolute top-5 right-5 text-gray-400 hover:text-gray-600 text-2xl transition-colors duration-300 leading-none"
            >
              √ó
            </button>
            
            <div className="text-center mb-6 md:mb-8">
              <h2 className="text-2xl md:text-3xl font-bold text-slate-800 mb-2">
                {showModal === 'login' ? '–í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É' : '–°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç'}
              </h2>
              <p className="text-slate-500 text-sm md:text-base">
                {showModal === 'login' 
                  ? '–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–∏ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ' 
                  : '–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'
                }
              </p>
            </div>
            
            <div className="space-y-4 md:space-y-5">
              <div className="form-group">
                <label className="block text-slate-700 font-semibold mb-2 text-sm">
                  üìß Email –∞–¥—Ä–µ—Å
                </label>
                <input
                  type="email"
                  value={email}
                  onChange={(e) => setEmail(e.target.value)}
                  className="w-full px-4 py-3 md:py-4 border-2 border-slate-200 rounded-xl bg-slate-50 focus:outline-none focus:border-indigo-500 focus:bg-white focus:shadow-lg transition-all duration-300 text-base"
                  placeholder="example@company.com"
                />
              </div>
              
              <div className="form-group">
                <label className="block text-slate-700 font-semibold mb-2 text-sm">
                  üîí –ü–∞—Ä–æ–ª—å
                </label>
                <input
                  type="password"
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  className="w-full px-4 py-3 md:py-4 border-2 border-slate-200 rounded-xl bg-slate-50 focus:outline-none focus:border-indigo-500 focus:bg-white focus:shadow-lg transition-all duration-300 text-base"
                  placeholder={showModal === 'login' ? '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å' : '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–¥–µ–∂–Ω—ã–π –ø–∞—Ä–æ–ª—å'}
                />
              </div>
              
              {message && (
                <div className={`p-3 md:p-4 rounded-xl text-sm font-medium ${
                  message.includes('—É—Å–ø–µ—à–Ω–æ') || message.includes('–≤—ã–ø–æ–ª–Ω–µ–Ω') 
                    ? 'bg-green-50 text-green-700 border border-green-200' 
                    : 'bg-red-50 text-red-700 border border-red-200'
                }`}>
                  {message}
                </div>
              )}
              
              <div className="flex gap-3 pt-6 md:pt-8">
                <button
                  onClick={resetForm}
                  className="flex-1 py-3 md:py-3.5 px-4 border-2 border-slate-200 rounded-xl bg-white text-slate-600 font-semibold hover:border-slate-300 hover:bg-slate-50 transition-all duration-300"
                >
                  –û—Ç–º–µ–Ω–∞
                </button>
                <button
                  onClick={showModal === 'login' ? handleLogin : handleRegister}
                  className="py-3 md:py-3.5 px-4 md:px-6 bg-gradient-to-r from-indigo-500 to-purple-600 text-white font-semibold rounded-xl hover:shadow-xl hover:-translate-y-0.5 transition-all duration-300 shadow-lg"
                  style={{ flex: 2 }}
                >
                  {showModal === 'login' ? 'üîë –í–æ–π—Ç–∏' : '‚ú® –°–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç'}
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </div>
  )
}

export default App
