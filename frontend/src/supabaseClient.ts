import { createClient } from '@supabase/supabase-js'

// –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è —Å fallback –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
const supabaseUrl = import.meta.env.VITE_SUPABASE_URL || 'https://olutrxiazrmanrgzzwmb.supabase.co'
const supabaseAnonKey = import.meta.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9sdXRyeGlhenJtYW5yZ3p6d21iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NzMwMjEsImV4cCI6MjA2NjQ0OTAyMX0.qxU_1Fjk4Mu9vMSfEI4jSGm3yYhh9WbmlSEFttOMKiM'

// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–ù–ï –±–ª–æ–∫–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É)
async function validateConfigAsync() {
  console.log('üîç –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Supabase...')
  console.log('URL:', supabaseUrl)
  console.log('Key length:', supabaseAnonKey?.length)
  
  if (!supabaseUrl || !supabaseAnonKey) {
    console.error('‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è Supabase')
    return false
  }

  if (!supabaseUrl.startsWith('https://')) {
    console.error('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π URL Supabase')
    return false
  }

  if (supabaseAnonKey.length < 100) {
    console.error('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∫–ª—é—á Supabase (—Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π)')
    return false
  }
  
  console.log('‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞')
  return true
}

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –ë–ï–ó –±–ª–æ–∫–∏—Ä—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
export const supabase = createClient(supabaseUrl, supabaseAnonKey, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true
  },
  realtime: {
    // –û—Ç–∫–ª—é—á–∞–µ–º realtime –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è WebSocket –æ—à–∏–±–æ–∫
    heartbeatIntervalMs: 30000,
    reconnectAfterMs: (tries: number) => Math.min(tries * 1000, 30000),
  },
  global: {
    headers: {
      'apikey': supabaseAnonKey,
      'Authorization': `Bearer ${supabaseAnonKey}`
    }
  }
})

// –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Supabase –∫–ª–∏–µ–Ω—Ç–∞...')
console.log('üìç Supabase URL:', supabaseUrl)
console.log('üîë Anon Key (–ø–µ—Ä–≤—ã–µ 20 —Å–∏–º–≤–æ–ª–æ–≤):', supabaseAnonKey?.substring(0, 20) + '...')
console.log('üîë Anon Key length:', supabaseAnonKey?.length || 0)
console.log('üåç Environment:', import.meta.env.MODE)

// –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è (–ù–ï –±–ª–æ–∫–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É)
export const testConnection = async (): Promise<boolean> => {
  try {
    console.log('üîó –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase...')
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    const configValid = await validateConfigAsync()
    if (!configValid) {
      console.error('‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Supabase')
      return false
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    const { error } = await supabase
      .from('profiles')
      .select('count')
      .limit(1)
      .maybeSingle()
    
    if (error && error.code !== 'PGRST116') {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Supabase:', error.message)
      return false
    }
    
    console.log('‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Supabase —É—Å–ø–µ—à–Ω–æ')
    return true
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', error)
    return false
  }
}

console.log('‚úÖ Supabase –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ')

// –¢–∏–ø—ã –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
export interface Profile {
  id: string
  email: string
  name: string
  role: 'admin' | 'sales_rep'
  approved: boolean
  created_at: string
  updated_at: string
}

export interface Client {
  id: string
  name: string
  phone: string
  address: string
  created_by: string
  created_at: string
}

export interface Product {
  id: string
  name: string
  price: number
  description: string
  created_at: string
}

export interface Order {
  id: string
  client_id: string
  sales_rep_id: string
  status: 'pending' | 'confirmed' | 'completed' | 'cancelled'
  total_amount: number
  created_at: string
  items: OrderItem[]
}

export interface OrderItem {
  id: string
  order_id: string
  product_id: string
  quantity: number
  price: number
}
