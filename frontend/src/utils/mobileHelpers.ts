/**
 * –ü—Ä–æ—Å—Ç—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–±–∏–ª—å–Ω—ã–º–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏
 */

// –î–µ—Ç–µ–∫—Ü–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
export const isMobile = (): boolean => {
  if (typeof window === 'undefined') return false
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ User Agent
  const userAgent = navigator.userAgent || ''
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  const mobileRegex = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
  const screenWidth = window.innerWidth
  const isMobileScreen = screenWidth <= 768
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ touch —Å–æ–±—ã—Ç–∏–π
  const hasTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0
  
  return mobileRegex.test(userAgent) || (isMobileScreen && hasTouch)
}

// –î–µ—Ç–µ–∫—Ü–∏—è iOS —É—Å—Ç—Ä–æ–π—Å—Ç–≤
export const isIOS = (): boolean => {
  if (typeof window === 'undefined') return false
  
  const userAgent = navigator.userAgent || ''
  return /iPad|iPhone|iPod/.test(userAgent)
}

// –î–µ—Ç–µ–∫—Ü–∏—è Android —É—Å—Ç—Ä–æ–π—Å—Ç–≤
export const isAndroid = (): boolean => {
  if (typeof window === 'undefined') return false
  
  const userAgent = navigator.userAgent || ''
  return /android/i.test(userAgent)
}

// –ê–¥–∞–ø—Ç–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
export const adaptForMobile = () => {
  if (typeof window === 'undefined') return
  
  // –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è Android
  if (isAndroid()) {
    // –û—Ç–∫–ª—é—á–∞–µ–º –∫–æ–Ω—Å–æ–ª—å–Ω—ã–µ –ª–æ–≥–∏ –≤ production –Ω–∞ Android
    if (process.env.NODE_ENV === 'production') {
      console.log = () => {}
      console.warn = () => {}
      console.error = () => {}
    }
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã—Å–æ—Ç—É –¥–ª—è Android
    document.documentElement.style.height = '100%'
    document.body.style.height = '100%'
  }
  
  // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑—É–º –ø—Ä–∏ –¥–≤–æ–π–Ω–æ–º —Ç–∞–ø–µ
  let lastTouchEnd = 0
  document.addEventListener('touchend', (event) => {
    const now = new Date().getTime()
    if (now - lastTouchEnd <= 300) {
      event.preventDefault()
    }
    lastTouchEnd = now
  }, false)
  
  // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∑—É–º –ø—Ä–∏ –ø–∏–Ω—á–µ
  document.addEventListener('touchmove', (event) => {
    if (event.touches && event.touches.length > 1) {
      event.preventDefault()
    }
  }, { passive: false })
  
  // –§–∏–∫—Å–∏—Ä—É–µ–º –≤—ã—Å–æ—Ç—É –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö –±—Ä–∞—É–∑–µ—Ä–æ–≤
  const setVH = () => {
    const vh = window.innerHeight * 0.01
    document.documentElement.style.setProperty('--vh', `${vh}px`)
  }
  
  setVH()
  window.addEventListener('resize', setVH)
  window.addEventListener('orientationchange', setVH)
  
  console.log('üì± –ú–æ–±–∏–ª—å–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∞')
}

// –î–µ—Ç–µ–∫—Ü–∏—è —Å–µ—Ç–µ–≤–æ–≥–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
export const getNetworkStatus = () => {
  if (typeof navigator === 'undefined') return { online: true, connection: 'unknown' }
  
  return {
    online: navigator.onLine,
    connection: 'unknown' // –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
  }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
export const handleMobileError = (error: Error) => {
  console.error('üö® –ú–æ–±–∏–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞:', error)
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫—É—é –æ—à–∏–±–∫—É
  if (error.message.includes('Network') || error.message.includes('fetch')) {
    return '–ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
  }
  
  if (error.message.includes('Auth') || error.message.includes('token')) {
    return '–ü—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.'
  }
  
  return '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø–æ–¥–¥–µ—Ä–∂–∫–µ.'
}

// –í–∏–±—Ä–∞—Ü–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
export const vibrate = (pattern: number | number[] = 100) => {
  if (typeof navigator !== 'undefined' && navigator.vibrate) {
    navigator.vibrate(pattern)
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Service Worker
export const supportsServiceWorker = (): boolean => {
  return typeof navigator !== 'undefined' && 'serviceWorker' in navigator
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Web App Manifest
export const supportsWebAppManifest = (): boolean => {
  return typeof window !== 'undefined' && 'applicationCache' in window
}

// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ
export const getDeviceInfo = () => {
  if (typeof window === 'undefined') return null
  
  return {
    isMobile: isMobile(),
    isIOS: isIOS(),
    isAndroid: isAndroid(),
    screenWidth: window.innerWidth,
    screenHeight: window.innerHeight,
    userAgent: navigator.userAgent || '',
    online: navigator.onLine,
    supportsTouch: 'ontouchstart' in window,
    supportsServiceWorker: supportsServiceWorker(),
    supportsWebAppManifest: supportsWebAppManifest()
  }
}
