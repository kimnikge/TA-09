// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π

/**
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö —Ç–æ–∫–µ–Ω–æ–≤
 */
export const forceAuthCleanup = async (): Promise<void> => {
  try {
    // –û—á–∏—â–∞–µ–º –≤–µ—Å—å localStorage
    localStorage.clear()
    
    // –û—á–∏—â–∞–µ–º sessionStorage –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
    sessionStorage.clear()
    
    // –û—á–∏—â–∞–µ–º cookie –µ—Å–ª–∏ –µ—Å—Ç—å (–¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏)
    document.cookie.split(";").forEach((c) => {
      const eqPos = c.indexOf("=")
      const name = eqPos > -1 ? c.substr(0, eqPos) : c
      document.cookie = `${name}=;expires=Thu, 01 Jan 1970 00:00:00 GMT;path=/`
    })
    
    console.log('üßπ –í—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏')
  } catch (error) {
    console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error)
  }
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ç–æ–∫–µ–Ω–∞
 */
export const isTokenValid = (token: string | null): boolean => {
  if (!token) return false
  
  try {
    // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ JWT —Ç–æ–∫–µ–Ω–∞
    const parts = token.split('.')
    if (parts.length !== 3) return false
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ payload –º–æ–∂–Ω–æ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å
    const payload = JSON.parse(atob(parts[1]))
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è —Ç–æ–∫–µ–Ω–∞
    const now = Math.floor(Date.now() / 1000)
    if (payload.exp && payload.exp < now) {
      console.warn('üïê –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫')
      return false
    }
    
    return true
  } catch (error) {
    console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω–∞:', error)
    return false
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ localStorage —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏
 */
export const getValidTokenFromStorage = (): string | null => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–ª—é—á–∏ –¥–ª—è —Ç–æ–∫–µ–Ω–æ–≤ Supabase
    const possibleKeys = [
      'sb-olutrxiazrmanrgzzwmb-auth-token',
      'supabase.auth.token',
      'sb-auth-token'
    ]
    
    for (const key of possibleKeys) {
      const tokenData = localStorage.getItem(key)
      if (tokenData) {
        try {
          const parsed = JSON.parse(tokenData)
          const accessToken = parsed.access_token || parsed.accessToken
          
          if (isTokenValid(accessToken)) {
            return accessToken
          } else {
            // –£–¥–∞–ª—è–µ–º –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π —Ç–æ–∫–µ–Ω
            localStorage.removeItem(key)
          }
        } catch {
          // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ JSON, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫ –æ–±—ã—á–Ω—É—é —Å—Ç—Ä–æ–∫—É
          if (isTokenValid(tokenData)) {
            return tokenData
          } else {
            localStorage.removeItem(key)
          }
        }
      }
    }
    
    return null
  } catch (error) {
    console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ç–æ–∫–µ–Ω–∞:', error)
    return null
  }
}

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
 */
export const checkAuthStatus = async (): Promise<'authenticated' | 'unauthenticated' | 'error'> => {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–∞–ª–∏–¥–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ –≤ localStorage
    const token = getValidTokenFromStorage()
    
    if (!token) {
      return 'unauthenticated'
    }
    
    return 'authenticated'
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', error)
    return 'error'
  }
}
