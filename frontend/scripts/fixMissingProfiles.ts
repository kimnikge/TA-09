import { createClient } from '@supabase/supabase-js';
import { config } from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config();

const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://olutrxiazrmanrgzzwmb.supabase.co';
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9sdXRyeGlhenJtYW5yZ3p6d21iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NzMwMjEsImV4cCI6MjA2NjQ0OTAyMX0.qxU_1Fjk4Mu9vMSfEI4jSGm3yYhh9WbmlSEFttOMKiM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function fixMissingProfiles() {
  console.log('üîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –û–¢–°–£–¢–°–¢–í–£–Æ–©–ò–• –ü–†–û–§–ò–õ–ï–ô\n');
  console.log('=' .repeat(45));

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ auth —á–µ—Ä–µ–∑ —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é
    console.log('\n1Ô∏è‚É£  –ê–ù–ê–õ–ò–ó –°–ò–¢–£–ê–¶–ò–ò');
    console.log('-'.repeat(20));

    // –ü–æ—Å–∫–æ–ª—å–∫—É –º—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–ø—Ä—è–º—É—é –ø–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ auth.users,
    // –º—ã –Ω–∞–π–¥–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ —Å –Ω–µ–ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const { data: profiles, error: profilesError } = await supabase
      .from('profiles')
      .select('*')
      .order('created_at', { ascending: false });

    if (profilesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª–µ–π:', profilesError);
      return;
    }

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: ${profiles?.length || 0}`);

    // –ò—â–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ —Å –ø—É—Å—Ç—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const incompleteProfiles = profiles?.filter(p => 
      !p.name || p.name === 'null' || !p.email || p.email === 'null'
    ) || [];

    console.log(`‚ö†Ô∏è  –ù–µ–ø–æ–ª–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π: ${incompleteProfiles.length}`);

    if (incompleteProfiles.length > 0) {
      console.log('\nüìã –ù–µ–ø–æ–ª–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏:');
      incompleteProfiles.forEach((profile, index) => {
        console.log(`   ${index + 1}. ID: ${profile.id.slice(0, 8)}...`);
        console.log(`      Email: ${profile.email || '–ù–ï –£–ö–ê–ó–ê–ù'}`);
        console.log(`      –ò–º—è: ${profile.name || '–ù–ï –£–ö–ê–ó–ê–ù–û'}`);
        console.log(`      –†–æ–ª—å: ${profile.role}`);
      });
    }

    // 2. –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–µ–ø–æ–ª–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏
    console.log('\n2Ô∏è‚É£  –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ï–ü–û–õ–ù–´–• –ü–†–û–§–ò–õ–ï–ô');
    console.log('-'.repeat(35));

    if (incompleteProfiles.length > 0) {
      for (const profile of incompleteProfiles) {
        console.log(`\nüîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å ${profile.id.slice(0, 8)}...`);

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–º—è –∏ email –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ –æ–Ω–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç
        const updatedData: {
          name?: string;
          email?: string;
          role?: string;
          approved?: boolean;
        } = {};
        
        if (!profile.name || profile.name === 'null') {
          updatedData.name = profile.email ? 
            profile.email.split('@')[0] : 
            `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å_${profile.id.slice(0, 8)}`;
        }
        
        if (!profile.email || profile.email === 'null') {
          updatedData.email = `user_${profile.id.slice(0, 8)}@example.com`;
        }

        // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ —Ä–æ–ª—å —É–∫–∞–∑–∞–Ω–∞
        if (!profile.role) {
          updatedData.role = 'sales_rep';
        }

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º approved –≤ false –¥–ª—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        if (profile.approved === null || profile.approved === undefined) {
          updatedData.approved = false;
        }

        if (Object.keys(updatedData).length > 0) {
          const { data: updatedProfile, error: updateError } = await supabase
            .from('profiles')
            .update(updatedData)
            .eq('id', profile.id)
            .select()
            .single();

          if (updateError) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:`, updateError);
          } else {
            console.log(`‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω:`);
            console.log(`   –ò–º—è: ${updatedProfile.name}`);
            console.log(`   Email: ${updatedProfile.email}`);
            console.log(`   –†–æ–ª—å: ${updatedProfile.role}`);
          }
        } else {
          console.log('‚ÑπÔ∏è  –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–∏');
        }
      }
    } else {
      console.log('‚úÖ –í—Å–µ –ø—Ä–æ—Ñ–∏–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã');
    }

    // 3. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    console.log('\n3Ô∏è‚É£  –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø');
    console.log('-'.repeat(35));

    const testEmail = 'test.salesrep.new@example.com';
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π –ø—Ä–æ—Ñ–∏–ª—å
    const { data: existingTest } = await supabase
      .from('profiles')
      .select('*')
      .eq('email', testEmail)
      .single();

    if (existingTest) {
      console.log('‚ö†Ô∏è  –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
      console.log('üë§ –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è...');
      
      const testUserData = {
        id: crypto.randomUUID(),
        email: testEmail,
        name: '–¢–µ—Å—Ç–æ–≤—ã–π –¢–æ—Ä–≥–æ–≤—ã–π –ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å',
        role: 'sales_rep',
        approved: true  // –°—Ä–∞–∑—É –æ–¥–æ–±—Ä—è–µ–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      };

      const { data: testUser, error: testError } = await supabase
        .from('profiles')
        .insert(testUserData)
        .select()
        .single();

      if (testError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', testError);
        console.log('\nüí° –í–û–ó–ú–û–ñ–ù–ê–Ø –ü–†–ò–ß–ò–ù–ê:');
        console.log('   –¢–∞–±–ª–∏—Ü–∞ profiles —Ç—Ä–µ–±—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ auth.users');
        console.log('   –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
      } else {
        console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:');
        console.log(`   ID: ${testUser.id}`);
        console.log(`   –ò–º—è: ${testUser.name}`);
        console.log(`   Email: ${testUser.email}`);
        console.log('');
        console.log('‚ö†Ô∏è  –í–ê–ñ–ù–û: –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —Ç–æ–ª—å–∫–æ –≤ —Ç–∞–±–ª–∏—Ü–µ profiles.');
        console.log('   –î–ª—è –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.');
      }
    }

    // 4. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('\n4Ô∏è‚É£  –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê');
    console.log('-'.repeat(25));

    const { data: finalProfiles, error: finalError } = await supabase
      .from('profiles')
      .select('*')
      .order('created_at', { ascending: false });

    if (finalError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ:', finalError);
    } else {
      console.log(`üìä –ò—Ç–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: ${finalProfiles?.length || 0}`);
      
      const validProfiles = finalProfiles?.filter(p => 
        p.name && p.name !== 'null' && p.email && p.email !== 'null'
      ) || [];

      const salesReps = finalProfiles?.filter(p => p.role === 'sales_rep') || [];
      const admins = finalProfiles?.filter(p => p.role === 'admin') || [];

      console.log(`‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª–µ–π: ${validProfiles.length}`);
      console.log(`ü§ù –¢–æ—Ä–≥–æ–≤—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–π: ${salesReps.length}`);
      console.log(`üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: ${admins.length}`);
    }

    console.log('\nüéØ –†–ï–ó–Æ–ú–ï:');
    console.log('');
    console.log('‚úÖ –ù–µ–ø–æ–ª–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã');
    console.log('‚úÖ –£–ª—É—á—à–µ–Ω–∞ –ª–æ–≥–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –∫–æ–¥–µ');
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–ª—è –Ω–æ–≤—ã—Ö —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π');
    console.log('');
    console.log('üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('   1. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏');
    console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ —Ç–æ—Ä–≥–æ–≤—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ –≤–∏–¥—è—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤');

  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

fixMissingProfiles();
