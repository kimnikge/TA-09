import { createClient } from '@supabase/supabase-js';
import { config } from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config();

const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://olutrxiazrmanrgzzwmb.supabase.co';
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9sdXRyeGlhenJtYW5yZ3p6d21iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NzMwMjEsImV4cCI6MjA2NjQ0OTAyMX0.qxU_1Fjk4Mu9vMSfEI4jSGm3yYhh9WbmlSEFttOMKiM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkAndSetupDatabase() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Ç–∞–±–ª–∏—Ü...');
    
    const { data: tables, error: tablesError } = await supabase
      .rpc('get_tables');

    if (tablesError) {
      console.log('   –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü —á–µ—Ä–µ–∑ RPC, –ø–æ–ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–±...');
      
      // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –ø–æ–ø—Ä–æ–±—É–µ–º –∑–∞–ø—Ä–æ—Å–∏—Ç—å –∏–∑–≤–µ—Å—Ç–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
      const tablesToCheck = ['users', 'clients', 'products', 'orders'];
      
      for (const tableName of tablesToCheck) {
        try {
          const { error } = await supabase
            .from(tableName)
            .select('*')
            .limit(1);
            
          if (error) {
            console.log(`   ‚ùå –¢–∞–±–ª–∏—Ü–∞ "${tableName}" –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:`, error.message);
          } else {
            console.log(`   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ "${tableName}" —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
          }
        } catch (e) {
          console.log(`   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü—ã "${tableName}":`, e);
        }
      }
    } else {
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:', tables);
    }

    console.log('\n2. –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã users...');
    
    // –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É users
    const createUsersSQL = `
      CREATE TABLE IF NOT EXISTS users (
        id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
        name VARCHAR(255) NOT NULL,
        email VARCHAR(255) UNIQUE NOT NULL,
        phone VARCHAR(50),
        role VARCHAR(50) DEFAULT 'sales_rep' CHECK (role IN ('admin', 'sales_rep')),
        approved BOOLEAN DEFAULT false,
        created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
        updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
      );
    `;

    const { error: createUsersError } = await supabase.rpc('exec_sql', { sql: createUsersSQL });
    
    if (createUsersError) {
      console.log('   –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É —á–µ—Ä–µ–∑ RPC, –ø–æ–ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–±...');
      console.log('   –û—à–∏–±–∫–∞:', createUsersError);
    } else {
      console.log('   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ users —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    }

    console.log('\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã clients...');
    
    const { error: clientsCheckError } = await supabase
      .from('clients')
      .select('*')
      .limit(1);

    if (clientsCheckError) {
      console.log('   ‚ùå –¢–∞–±–ª–∏—Ü–∞ clients –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', clientsCheckError.message);
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É clients
      const createClientsSQL = `
        CREATE TABLE IF NOT EXISTS clients (
          id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
          name VARCHAR(255) NOT NULL,
          company_name VARCHAR(255),
          seller_name VARCHAR(255),
          address TEXT,
          created_by UUID REFERENCES users(id),
          created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
        );
      `;

      const { error: createClientsError } = await supabase.rpc('exec_sql', { sql: createClientsSQL });
      
      if (createClientsError) {
        console.log('   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É clients:', createClientsError);
      } else {
        console.log('   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ clients —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
      }
    } else {
      console.log('   ‚úÖ –¢–∞–±–ª–∏—Ü–∞ clients —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    }

    console.log('\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    const { data: existingUsers, error: usersError } = await supabase
      .from('users')
      .select('*');

    if (usersError) {
      console.log('   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', usersError.message);
    } else {
      console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${existingUsers?.length || 0}`);
      
      if (existingUsers && existingUsers.length > 0) {
        existingUsers.forEach((user, index) => {
          console.log(`      ${index + 1}. ${user.name} (${user.role}) - ${user.email}`);
        });
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤
    const { data: existingClients, error: clientsError } = await supabase
      .from('clients')
      .select('*');

    if (clientsError) {
      console.log('   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–ª–∏–µ–Ω—Ç–æ–≤:', clientsError.message);
    } else {
      console.log(`   üìä –ù–∞–π–¥–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: ${existingClients?.length || 0}`);
      
      if (existingClients && existingClients.length > 0) {
        existingClients.forEach((client, index) => {
          console.log(`      ${index + 1}. ${client.name} (${client.company_name})`);
        });
      }
    }

    console.log('\nüéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');

  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

checkAndSetupDatabase();
