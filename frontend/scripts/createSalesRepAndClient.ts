import { createClient } from '@supabase/supabase-js';
import { config } from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config();

const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://olutrxiazrmanrgzzwmb.supabase.co';
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9sdXRyeGlhenJtYW5yZ3p6d21iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NzMwMjEsImV4cCI6MjA2NjQ0OTAyMX0.qxU_1Fjk4Mu9vMSfEI4jSGm3yYhh9WbmlSEFttOMKiM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function createSalesRepAndClient() {
  console.log('üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è –∏ –∫–ª–∏–µ–Ω—Ç–∞...\n');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase
    console.log('0. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase...');
    console.log('   URL:', supabaseUrl);
    console.log('   Key:', supabaseKey.substring(0, 20) + '...');
    
    // –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    const { error: testError } = await supabase
      .from('profiles')
      .select('count')
      .limit(1);

    if (testError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase:', testError);
      return;
    }
    
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å–ø–µ—à–Ω–æ');
    console.log('');

    // 1. –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ auth.signUp
    console.log('1. –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ auth.signUp...');
    
    const timestamp = Date.now();
    const testEmail = `ivan.petrov.${timestamp}@gmail.com`;
    const testPassword = 'TestPassword123!';
    const testName = '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤';

    const { data: authData, error: authError } = await supabase.auth.signUp({
      email: testEmail,
      password: testPassword,
      options: {
        data: {
          full_name: testName  // –ò—Å–ø–æ–ª—å–∑—É–µ–º full_name, –∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –≤ —Ç—Ä–∏–≥–≥–µ—Ä–µ
        }
      }
    });

    if (authError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', authError);
      return;
    }

    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —á–µ—Ä–µ–∑ auth.signUp');
    console.log('   User ID:', authData.user?.id);
    console.log('   Email:', authData.user?.email);
    console.log('');

    // 2. –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞
    console.log('2. –ñ–¥–µ–º —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è —á–µ—Ä–µ–∑ —Ç—Ä–∏–≥–≥–µ—Ä...');
    await new Promise(resolve => setTimeout(resolve, 2000));

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–ª—Å—è
    console.log('3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è...');
    
    const { data: profile, error: profileError } = await supabase
      .from('profiles')
      .select('*')
      .eq('id', authData.user?.id)
      .single();

    let salesRep;

    if (profileError) {
      console.error('‚ùå –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω:', profileError);
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –≤—Ä—É—á–Ω—É—é
      console.log('   –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –≤—Ä—É—á–Ω—É—é...');
      const { data: manualProfile, error: manualError } = await supabase
        .from('profiles')
        .insert({
          id: authData.user?.id,
          name: testName,
          email: testEmail,
          role: 'sales_rep',
          approved: false
        })
        .select()
        .single();

      if (manualError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è –≤—Ä—É—á–Ω—É—é:', manualError);
        return;
      }

      console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω –≤—Ä—É—á–Ω—É—é:', manualProfile);
      console.log('');
      
      salesRep = manualProfile;
    } else {
      console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –Ω–∞–π–¥–µ–Ω:', profile);
      console.log('   ID:', profile.id);
      console.log('   –ò–º—è:', profile.name);
      console.log('   –†–æ–ª—å:', profile.role);
      console.log('   –û–¥–æ–±—Ä–µ–Ω:', profile.approved);
      console.log('');
      
      salesRep = profile;
    }

    if (!salesRep) {
      console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è');
      return;
    }

    // 4. –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –æ—Ç –∏–º–µ–Ω–∏ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è
    console.log('4. –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ –æ—Ç –∏–º–µ–Ω–∏ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è...');
    
    const clientData = {
      name: '–ê–ª–µ–∫—Å–µ–π –°–∏–¥–æ—Ä–æ–≤',
      company_name: '–û–û–û "–¢–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–ø–∞–Ω–∏—è"',
      seller_name: '–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º',
      address: '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 123',
      created_by: salesRep.id
    };

    const { data: client, error: clientError } = await supabase
      .from('clients')
      .insert(clientData)
      .select()
      .single();

    if (clientError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞:', clientError);
      return;
    }

    console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω:', client);
    console.log('   ID:', client.id);
    console.log('   –ò–º—è:', client.name);
    console.log('   –ö–æ–º–ø–∞–Ω–∏—è:', client.company_name);
    console.log('   –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º:', client.created_by);
    console.log('');

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Ç–æ—Ä–≥–æ–≤–æ–º—É –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—é
    console.log('5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–∏ –∫–ª–∏–µ–Ω—Ç–∞ –∏ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è...');
    
    const { data: clientsForSalesRep, error: checkError } = await supabase
      .from('clients')
      .select('*')
      .eq('created_by', salesRep.id);

    if (checkError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∫–ª–∏–µ–Ω—Ç–æ–≤:', checkError);
      return;
    }

    console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç—ã, —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–æ—Ä–≥–æ–≤—ã–º –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–º:');
    clientsForSalesRep?.forEach((c, index) => {
      console.log(`   ${index + 1}. ${c.name} (${c.company_name})`);
    });
    console.log('');

    // 6. –°–æ–∑–¥–∞–µ–º –µ—â–µ –æ–¥–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –ø–æ–ª–Ω–æ—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    console.log('6. –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ç–æ—Ä–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞...');
    
    const client2Data = {
      name: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
      company_name: '–ò–ü –ò–≤–∞–Ω–æ–≤–∞ –ú.–°.',
      seller_name: '–î–∏—Ä–µ–∫—Ç–æ—Ä',
      address: '–≥. –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –ø—Ä. –ù–µ–≤—Å–∫–∏–π, –¥. 45',
      created_by: salesRep.id
    };

    const { data: client2, error: client2Error } = await supabase
      .from('clients')
      .insert(client2Data)
      .select()
      .single();

    if (client2Error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—Ç–æ—Ä–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞:', client2Error);
      return;
    }

    console.log('‚úÖ –í—Ç–æ—Ä–æ–π –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω:', client2.name);
    console.log('');

    // 7. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è
    console.log('7. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –≤—Å–µ –∫–ª–∏–µ–Ω—Ç—ã —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è:');
    
    const { data: allClientsForSalesRep, error: finalCheckError } = await supabase
      .from('clients')
      .select('*')
      .eq('created_by', salesRep.id)
      .order('created_at', { ascending: true });

    if (finalCheckError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ:', finalCheckError);
      return;
    }

    console.log(`‚úÖ –í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ —É —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è "${salesRep.name}": ${allClientsForSalesRep?.length || 0}`);
    allClientsForSalesRep?.forEach((c, index) => {
      console.log(`   ${index + 1}. ${c.name}`);
      console.log(`      –ö–æ–º–ø–∞–Ω–∏—è: ${c.company_name}`);
      console.log(`      –ü—Ä–æ–¥–∞–≤–µ—Ü: ${c.seller_name}`);
      console.log(`      –ê–¥—Ä–µ—Å: ${c.address}`);
      console.log(`      –°–æ–∑–¥–∞–Ω: ${new Date(c.created_at).toLocaleString('ru-RU')}`);
      console.log('');
    });

    console.log('üéâ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!');
    console.log('');
    console.log('üìã –°–≤–æ–¥–∫–∞:');
    console.log(`   - –°–æ–∑–¥–∞–Ω —Ç–æ—Ä–≥–æ–≤—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å: ${salesRep.name} (ID: ${salesRep.id})`);
    console.log(`   - –°–æ–∑–¥–∞–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: ${allClientsForSalesRep?.length || 0}`);
    console.log('');
    console.log('üí° –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –ø–æ–¥ —ç—Ç–∏–º —Ç–æ—Ä–≥–æ–≤—ã–º –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–º');
    console.log('   –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç—ã –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ —Ä–∞–∑–¥–µ–ª–µ –ö–õ–ò–ï–ù–¢–´.');

  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
async function cleanupTestData() {
  console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...\n');

  try {
    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
    const { error: clientsError } = await supabase
      .from('clients')
      .delete()
      .like('name', '%–¢–µ—Å—Ç–æ–≤%')
      .or('name.like.%–ò–≤–∞–Ω–æ–≤–∞%,name.like.%–°–∏–¥–æ—Ä–æ–≤%');

    if (clientsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤:', clientsError);
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã —É–¥–∞–ª–µ–Ω—ã');
    }

    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è –∏–∑ profiles
    const { error: salesRepError } = await supabase
      .from('profiles')
      .delete()
      .eq('email', 'ivan.petrov@test.com');

    if (salesRepError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è:', salesRepError);
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω –∏–∑ profiles');
    }

    // –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ auth.users —Ç—Ä–µ–±—É–µ—Ç –æ—Å–æ–±—ã—Ö –ø—Ä–∞–≤
    // –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —á–µ—Ä–µ–∑ Supabase Dashboard
    console.log('‚ÑπÔ∏è  –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –î–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –Ω—É–∂–Ω–æ —Ç–∞–∫–∂–µ —É–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('   ivan.petrov@test.com –∏–∑ auth.users —á–µ—Ä–µ–∑ Supabase Dashboard');

    console.log('üéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ:', error);
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const args = process.argv.slice(2);

if (args.includes('--cleanup')) {
  cleanupTestData();
} else {
  createSalesRepAndClient();
}
