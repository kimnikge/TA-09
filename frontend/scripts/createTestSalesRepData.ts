import { createClient } from '@supabase/supabase-js';
import { config } from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config();

const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://olutrxiazrmanrgzzwmb.supabase.co';
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9sdXRyeGlhenJtYW5yZ3p6d21iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NzMwMjEsImV4cCI6MjA2NjQ0OTAyMX0.qxU_1Fjk4Mu9vMSfEI4jSGm3yYhh9WbmlSEFttOMKiM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function createSalesRepWithClients() {
  console.log('üë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏...\n');

  try {
    // 1. –ù–∞–π–¥–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–æ–ª—å—é sales_rep
    console.log('1. –ü–æ–∏—Å–∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è...');
    
    const { data: salesReps, error: salesRepsError } = await supabase
      .from('profiles')
      .select('*')
      .eq('role', 'sales_rep')
      .not('name', 'is', null)
      .limit(1);

    if (salesRepsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–π:', salesRepsError);
      return;
    }

    let salesRep;
    
    if (salesReps && salesReps.length > 0) {
      salesRep = salesReps[0];
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω —Ç–æ—Ä–≥–æ–≤—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å: ${salesRep.name} (${salesRep.email})`);
    } else {
      console.log('‚ö†Ô∏è  –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–π');
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ª—é–±–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —Ä–æ–ª—å—é sales_rep
      const { data: anySalesReps, error: anyError } = await supabase
        .from('profiles')
        .select('*')
        .eq('role', 'sales_rep')
        .limit(1);

      if (anyError || !anySalesReps || anySalesReps.length === 0) {
        console.log('‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ');
        return;
      }

      salesRep = anySalesReps[0];
      
      // –û–±–Ω–æ–≤–∏–º –ø—Ä–æ—Ñ–∏–ª—å —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è
      const { data: updatedSalesRep, error: updateError } = await supabase
        .from('profiles')
        .update({
          name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤ (–¢–µ—Å—Ç–æ–≤—ã–π)',
          email: salesRep.email || 'ivan.petrov@test.com'
        })
        .eq('id', salesRep.id)
        .select()
        .single();

      if (updateError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', updateError);
        return;
      }

      salesRep = updatedSalesRep;
      console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ç–æ—Ä–≥–æ–≤—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å: ${salesRep.name}`);
    }

    console.log(`   ID: ${salesRep.id}`);
    console.log(`   –†–æ–ª—å: ${salesRep.role}`);
    console.log('');

    // 2. –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è —ç—Ç–æ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è
    console.log('2. –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è...');
    
    const clientsData = [
      {
        name: '–û–û–û "–ê–ª—å—Ñ–∞"',
        company_name: '–û–û–û "–ê–ª—å—Ñ–∞ –¢–æ—Ä–≥"',
        seller_name: '–ú–µ–Ω–µ–¥–∂–µ—Ä –ø–æ –∑–∞–∫—É–ø–∫–∞–º',
        address: '–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –°–∞–¥–æ–≤–∞—è, –¥. 15',
        created_by: salesRep.id
      },
      {
        name: '–ò–ü –°–∏–¥–æ—Ä–æ–≤ –ê.–í.',
        company_name: '–ò–ü –°–∏–¥–æ—Ä–æ–≤ –ê–ª–µ–∫—Å–µ–π –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–∏—á',
        seller_name: '–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å',
        address: '–≥. –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –ø—Ä. –ù–µ–≤—Å–∫–∏–π, –¥. 88',
        created_by: salesRep.id
      },
      {
        name: '–û–û–û "–ë–µ—Ç–∞ –ü–ª—é—Å"',
        company_name: '–û–û–û "–ë–µ—Ç–∞ –ü–ª—é—Å"',
        seller_name: '–î–∏—Ä–µ–∫—Ç–æ—Ä –ø–æ –ø—Ä–æ–¥–∞–∂–∞–º',
        address: '–≥. –ï–∫–∞—Ç–µ—Ä–∏–Ω–±—É—Ä–≥, —É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 23',
        created_by: salesRep.id
      },
      {
        name: '–ú–∞–≥–∞–∑–∏–Ω "–£ –î–æ–º–∞"',
        company_name: '–û–û–û "–¢–æ—Ä–≥–æ–≤—ã–π –î–æ–º"',
        seller_name: '–£–ø—Ä–∞–≤–ª—è—é—â–∏–π',
        address: '–≥. –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫, —É–ª. –ö—Ä–∞—Å–Ω—ã–π –ø—Ä–æ—Å–ø–µ–∫—Ç, –¥. 45',
        created_by: salesRep.id
      },
      {
        name: '–¢–¶ "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π"',
        company_name: '–û–û–û "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –¢–ö"',
        seller_name: '–ù–∞—á–∞–ª—å–Ω–∏–∫ –æ—Ç–¥–µ–ª–∞ –∑–∞–∫—É–ø–æ–∫',
        address: '–≥. –ö–∞–∑–∞–Ω—å, —É–ª. –ë–∞—É–º–∞–Ω–∞, –¥. 12',
        created_by: salesRep.id
      }
    ];

    const createdClients = [];
    
    for (const clientData of clientsData) {
      const { data: newClient, error: clientError } = await supabase
        .from('clients')
        .insert(clientData)
        .select()
        .single();

      if (clientError) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞ "${clientData.name}":`, clientError.message);
      } else {
        createdClients.push(newClient);
        console.log(`‚úÖ –°–æ–∑–¥–∞–Ω –∫–ª–∏–µ–Ω—Ç: ${newClient.name}`);
      }
    }

    console.log(`\nüìä –ò—Ç–æ–≥–æ —Å–æ–∑–¥–∞–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: ${createdClients.length}`);
    console.log('');

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–æ–ª—å–∫–æ –≤—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ —É —ç—Ç–æ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è
    console.log('3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è...');
    
    const { data: allUserClients, error: allClientsError } = await supabase
      .from('clients')
      .select('*')
      .eq('created_by', salesRep.id)
      .order('created_at', { ascending: false });

    if (allClientsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤:', allClientsError);
    } else {
      console.log(`‚úÖ –í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ —É —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è "${salesRep.name}": ${allUserClients?.length || 0}`);
      
      if (allUserClients && allUserClients.length > 0) {
        allUserClients.forEach((client, index) => {
          console.log(`   ${index + 1}. ${client.name}`);
          console.log(`      –ö–æ–º–ø–∞–Ω–∏—è: ${client.company_name || '–ù–µ —É–∫–∞–∑–∞–Ω–∞'}`);
          console.log(`      –°–æ–∑–¥–∞–Ω: ${new Date(client.created_at).toLocaleString('ru-RU')}`);
        });
      }
    }

    console.log('\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('');
    console.log('üìã –†–ï–ó–Æ–ú–ï:');
    console.log(`   üë§ –¢–æ—Ä–≥–æ–≤—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å: ${salesRep.name}`);
    console.log(`   üìß Email: ${salesRep.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}`);
    console.log(`   üÜî ID: ${salesRep.id}`);
    console.log(`   üë• –ö–ª–∏–µ–Ω—Ç–æ–≤: ${allUserClients?.length || 0}`);
    console.log('');
    console.log('üñ•Ô∏è  –ü–†–û–í–ï–†–ö–ê –í –ò–ù–¢–ï–†–§–ï–ô–°–ï:');
    console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:5173');
    console.log('   2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–∏—Å—Ç–µ–º—É —Å –¥–∞–Ω–Ω—ã–º–∏ —ç—Ç–æ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è');
    console.log('   3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª –ö–õ–ò–ï–ù–¢–´');
    console.log('   4. –¢–µ–ø–µ—Ä—å –≤—ã –¥–æ–ª–∂–Ω—ã —É–≤–∏–¥–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∫–ª–∏–µ–Ω—Ç–æ–≤!');
    console.log('');
    console.log('üí° –í–ê–ñ–ù–û: –ü–æ—Å–ª–µ –Ω–∞—à–∏—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –∫–æ–¥–µ, —Ç–æ—Ä–≥–æ–≤—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å');
    console.log('   —Ç–µ–ø–µ—Ä—å –≤–∏–¥–∏—Ç –í–°–ï–• –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ —Å–≤–æ–∏—Ö.');

  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
async function cleanupTestData() {
  console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...\n');

  try {
    // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
    const { error: clientsError } = await supabase
      .from('clients')
      .delete()
      .or('name.like.%–ê–ª—å—Ñ–∞%,name.like.%–°–∏–¥–æ—Ä–æ–≤%,name.like.%–ë–µ—Ç–∞%,name.like.%–£ –î–æ–º–∞%,name.like.%–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π%,name.like.%–¢–µ—Å—Ç–æ–≤—ã–π%');

    if (clientsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤:', clientsError);
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –∫–ª–∏–µ–Ω—Ç—ã —É–¥–∞–ª–µ–Ω—ã');
    }

    console.log('üéâ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ:', error);
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const args = process.argv.slice(2);

if (args.includes('--cleanup')) {
  cleanupTestData();
} else {
  createSalesRepWithClients();
}
