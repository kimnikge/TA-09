import { createClient } from '@supabase/supabase-js'
import * as fs from 'fs'
import * as path from 'path'

// –ß–∏—Ç–∞–µ–º .env —Ñ–∞–π–ª
const envPath = path.join(process.cwd(), '.env')
const envFile = fs.readFileSync(envPath, 'utf8')

const env: Record<string, string> = {}
envFile.split('\n').forEach(line => {
  const [key, ...valueParts] = line.split('=')
  if (key && valueParts.length > 0) {
    env[key.trim()] = valueParts.join('=').trim()
  }
})

const supabase = createClient(
  env.VITE_SUPABASE_URL || 'http://localhost:54321',
  env.VITE_SUPABASE_ANON_KEY || 'your-anon-key'
)

async function checkDatabase() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase...')
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await supabase.auth.getUser()
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ')
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
    const tables = ['profiles', 'clients', 'products', 'orders', 'order_items']
    
    for (const table of tables) {
      try {
        const { error } = await supabase
          .from(table)
          .select('*')
          .limit(1)
        
        if (error) {
          console.log(`‚ùå –¢–∞–±–ª–∏—Ü–∞ ${table}: ${error.message}`)
        } else {
          console.log(`‚úÖ –¢–∞–±–ª–∏—Ü–∞ ${table}: —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`)
        }
      } catch {
        console.log(`‚ùå –¢–∞–±–ª–∏—Ü–∞ ${table}: –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏`)
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ profiles
    const { data: profiles, error: profilesError } = await supabase
      .from('profiles')
      .select('*')
    
    if (profilesError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª–µ–π:', profilesError.message)
    } else {
      console.log(`üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Ñ–∏–ª–µ–π –≤ –ë–î: ${profiles?.length || 0}`)
      if (profiles && profiles.length > 0) {
        console.log('üë• –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏:')
        profiles.forEach(profile => {
          console.log(`  - ${profile.email} (${profile.role}, approved: ${profile.approved})`)
        })
      }
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã
    const { data: products, error: productsError } = await supabase
      .from('products')
      .select('*')
    
    if (productsError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤:', productsError.message)
    } else {
      console.log(`üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –≤ –ë–î: ${products?.length || 0}`)
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', error)
  }
}

checkDatabase()
