import { supabase } from '../src/supabaseClient';

async function testSupabaseStorage() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Supabase Storage...');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase...');
    const { error: authError } = await supabase.auth.getUser();
    if (authError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', authError.message);
      return;
    }
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ bucket
    console.log('2. –ü—Ä–æ–≤–µ—Ä–∫–∞ bucket product-images...');
    const { data: buckets, error: bucketsError } = await supabase.storage.listBuckets();
    if (bucketsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ buckets:', bucketsError.message);
      return;
    }
    
    const productImagesBucket = buckets.find(bucket => bucket.id === 'product-images');
    if (productImagesBucket) {
      console.log('‚úÖ Bucket product-images –Ω–∞–π–¥–µ–Ω');
      console.log('üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ bucket:', {
        id: productImagesBucket.id,
        name: productImagesBucket.name,
        public: productImagesBucket.public,
        file_size_limit: productImagesBucket.file_size_limit,
        allowed_mime_types: productImagesBucket.allowed_mime_types
      });
    } else {
      console.log('‚ö†Ô∏è  Bucket product-images –Ω–µ –Ω–∞–π–¥–µ–Ω');
      console.log('üìù –î–æ—Å—Ç—É–ø–Ω—ã–µ buckets:', buckets.map(b => b.id));
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã products
    console.log('3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã products...');
    const { data: products, error: productsError } = await supabase
      .from('products')
      .select('id, name, image_url')
      .limit(1);

    if (productsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ products:', productsError.message);
      return;
    }
    console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ products –¥–æ—Å—Ç—É–ø–Ω–∞');
    console.log('üìä –ü—Ä–∏–º–µ—Ä —Ç–æ–≤–∞—Ä–∞:', products?.[0] || '–¢–æ–≤–∞—Ä–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç');

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –∏–∑ bucket
    if (productImagesBucket) {
      console.log('4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ bucket...');
      const { data: files, error: filesError } = await supabase.storage
        .from('product-images')
        .list('products', {
          limit: 5
        });

      if (filesError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤:', filesError.message);
      } else {
        console.log('‚úÖ –î–æ—Å—Ç—É–ø –∫ bucket —Ä–∞–∑—Ä–µ—à–µ–Ω');
        console.log('üìÅ –§–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ products:', files?.length || 0);
        if (files && files.length > 0) {
          console.log('üìÑ –ü—Ä–∏–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤:', files.slice(0, 3).map(f => f.name));
        }
      }
    }

    console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    console.log('\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    if (!productImagesBucket) {
      console.log('  1. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SETUP_STORAGE.sql –≤ –≤–∞—à–µ–π Supabase –∫–æ–Ω—Å–æ–ª–∏');
    }
    console.log('  2. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å');
    console.log('  3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ —Å–ø–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤');

  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testSupabaseStorage();
