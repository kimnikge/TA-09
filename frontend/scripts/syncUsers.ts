import { createClient } from '@supabase/supabase-js'

const supabaseUrl = 'https://olutrxiazrmanrgzzwmb.supabase.co'
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9sdXRyeGlhenJtYW5yZ3p6d21iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NzMwMjEsImV4cCI6MjA2NjQ0OTAyMX0.qxU_1Fjk4Mu9vMSfEI4jSGm3yYhh9WbmlSEFttOMKiM'

const supabase = createClient(supabaseUrl, supabaseAnonKey)

async function syncUsersFromAuth() {
  console.log('üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ auth.users –≤ profiles...')
  console.log('=' .repeat(70))
  
  try {
    // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ profiles
    const { data: profiles, error: profilesError } = await supabase
      .from('profiles')
      .select('*')
    
    if (profilesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è profiles:', profilesError.message)
      return
    }
    
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –≤ profiles: ${profiles?.length || 0}`)
    
    // –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ auth.users (–ø–æ —Å–∫—Ä–∏–Ω—à–æ—Ç—É)
    const authUsers = [
      {
        id: '5b168adc-d3e9-409d-abbb-4d2c6e12204a',
        email: 'e.yugay.fregat@gmail.com'
      },
      {
        id: 'a0fc8606-9785-4f43-b2a1-2147bcee3a6a', 
        email: 'kimnikge@gmail.com'
      }
    ]
    
    console.log('üìß –ù–∞–π–¥–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–∑ auth.users:')
    authUsers.forEach((user, index) => {
      console.log(`   ${index + 1}. ${user.email} (${user.id})`)
    })
    console.log('')
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    for (const authUser of authUsers) {
      console.log(`üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: ${authUser.email}`)
      
      // –ù–∞—Ö–æ–¥–∏–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∑–∞–ø–∏—Å—å –≤ profiles
      const profileRecord = profiles?.find(p => p.id === authUser.id)
      
      if (profileRecord) {
        console.log(`   ‚úÖ –ó–∞–ø–∏—Å—å –≤ profiles –Ω–∞–π–¥–µ–Ω–∞`)
        console.log(`   üìß –û–±–Ω–æ–≤–ª—è–µ–º email: ${profileRecord.email || '–ù–ï–¢'} ‚Üí ${authUser.email}`)
        
        // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–æ–ª—å
        const isAdmin = authUser.email.includes('kimnikge') || authUser.email.includes('admin')
        const role = isAdmin ? 'admin' : 'sales_rep'
        const name = authUser.email.split('@')[0]
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å
        const { error: updateError } = await supabase
          .from('profiles')
          .update({
            email: authUser.email,
            name: name,
            role: role,
            approved: true
          })
          .eq('id', authUser.id)
        
        if (updateError) {
          console.error(`   ‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: ${updateError.message}`)
        } else {
          console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω:`)
          console.log(`      üìß Email: ${authUser.email}`)
          console.log(`      üë§ –ò–º—è: ${name}`)
          console.log(`      üîë –†–æ–ª—å: ${role}`)
          console.log(`      ‚úÖ –°—Ç–∞—Ç—É—Å: –û–¥–æ–±—Ä–µ–Ω`)
        }
      } else {
        console.log(`   ‚ö†Ô∏è –ó–∞–ø–∏—Å—å –≤ profiles –ù–ï –Ω–∞–π–¥–µ–Ω–∞, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é...`)
        
        // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å
        const isAdmin = authUser.email.includes('kimnikge') || authUser.email.includes('admin')
        const role = isAdmin ? 'admin' : 'sales_rep'
        const name = authUser.email.split('@')[0]
        
        const { error: insertError } = await supabase
          .from('profiles')
          .insert({
            id: authUser.id,
            email: authUser.email,
            name: name,
            role: role,
            approved: true
          })
        
        if (insertError) {
          console.error(`   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è: ${insertError.message}`)
        } else {
          console.log(`   ‚úÖ –ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞:`)
          console.log(`      üìß Email: ${authUser.email}`)
          console.log(`      üë§ –ò–º—è: ${name}`)
          console.log(`      üîë –†–æ–ª—å: ${role}`)
          console.log(`      ‚úÖ –°—Ç–∞—Ç—É—Å: –û–¥–æ–±—Ä–µ–Ω`)
        }
      }
      console.log('')
    }
    
    console.log('üéâ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!')
    console.log('üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è')
    
  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error)
  }
}

syncUsersFromAuth()

export { syncUsersFromAuth }
