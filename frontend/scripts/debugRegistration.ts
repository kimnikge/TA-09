import { createClient } from '@supabase/supabase-js';
import { config } from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config();

const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://olutrxiazrmanrgzzwmb.supabase.co';
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9sdXRyeGlhenJtYW5yZ3p6d21iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NzMwMjEsImV4cCI6MjA2NjQ0OTAyMX0.qxU_1Fjk4Mu9vMSfEI4jSGm3yYhh9WbmlSEFttOMKiM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function debugRegistrationIssue() {
  console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –° –†–ï–ì–ò–°–¢–†–ê–¶–ò–ï–ô\n');
  console.log('=' .repeat(50));

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ auth.users —á–µ—Ä–µ–∑ API
    console.log('\n1Ô∏è‚É£  –ü–†–û–í–ï–†–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ï–ô –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–ò');
    console.log('-'.repeat(40));
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: { user: currentUser }, error: userError } = await supabase.auth.getUser();
    
    if (userError) {
      console.log('‚ùå –ù–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userError.message);
    } else if (currentUser) {
      console.log('‚úÖ –¢–µ–∫—É—â–∏–π –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:');
      console.log(`   ID: ${currentUser.id}`);
      console.log(`   Email: ${currentUser.email}`);
      console.log(`   –°–æ–∑–¥–∞–Ω: ${new Date(currentUser.created_at).toLocaleString('ru-RU')}`);
      console.log(`   –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:`, currentUser.user_metadata);
    } else {
      console.log('‚ö†Ô∏è  –ù–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ profiles
    console.log('\n2Ô∏è‚É£  –ü–†–û–í–ï–†–ö–ê –¢–ê–ë–õ–ò–¶–´ PROFILES');
    console.log('-'.repeat(30));
    
    const { data: profiles, error: profilesError } = await supabase
      .from('profiles')
      .select('*')
      .order('created_at', { ascending: false });

    if (profilesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª–µ–π:', profilesError);
    } else {
      console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: ${profiles?.length || 0}`);
      
      if (profiles && profiles.length > 0) {
        profiles.forEach((profile, index) => {
          console.log(`\n   ${index + 1}. –ü—Ä–æ—Ñ–∏–ª—å ${profile.id.slice(0, 8)}...:`);
          console.log(`      üìß Email: ${profile.email || '–ù–ï –£–ö–ê–ó–ê–ù'}`);
          console.log(`      üë§ –ò–º—è: ${profile.name || '–ù–ï –£–ö–ê–ó–ê–ù–û'}`);
          console.log(`      üè∑Ô∏è  –†–æ–ª—å: ${profile.role || '–ù–ï –£–ö–ê–ó–ê–ù–ê'}`);
          console.log(`      ‚úÖ –û–¥–æ–±—Ä–µ–Ω: ${profile.approved ? '–î–∞' : '–ù–µ—Ç'}`);
          console.log(`      üìÖ –°–æ–∑–¥–∞–Ω: ${profile.created_at ? new Date(profile.created_at).toLocaleString('ru-RU') : '–ù–ï –£–ö–ê–ó–ê–ù–û'}`);
        });
      }
    }

    // 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –≤—Ä—É—á–Ω—É—é
    console.log('\n3Ô∏è‚É£  –¢–ï–°–¢ –°–û–ó–î–ê–ù–ò–Ø –ü–†–û–§–ò–õ–Ø');
    console.log('-'.repeat(30));
    
    if (currentUser) {
      console.log('üß™ –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
      
      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —É–∂–µ –ø—Ä–æ—Ñ–∏–ª—å
      const { data: existingProfile } = await supabase
        .from('profiles')
        .select('*')
        .eq('id', currentUser.id)
        .single();

      if (existingProfile) {
        console.log('‚ö†Ô∏è  –ü—Ä–æ—Ñ–∏–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
        console.log('   –ò–º—è:', existingProfile.name);
        console.log('   Email:', existingProfile.email);
      } else {
        console.log('üíæ –°–æ–∑–¥–∞–µ–º –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å...');
        
        const profileData = {
          id: currentUser.id,
          email: currentUser.email,
          name: currentUser.user_metadata?.full_name || currentUser.email?.split('@')[0] || '–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
          role: 'sales_rep',
          approved: false,
          created_at: new Date().toISOString()
        };

        const { data: newProfile, error: createError } = await supabase
          .from('profiles')
          .insert(profileData)
          .select()
          .single();

        if (createError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª—è:', createError);
          console.log('\nüîç –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:');
          console.log('   1. –ü–æ–ª–∏—Ç–∏–∫–∏ RLS –±–ª–æ–∫–∏—Ä—É—é—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è');
          console.log('   2. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ —É —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
          console.log('   3. –ù–∞—Ä—É—à–µ–Ω–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
          console.log('   4. –¢—Ä–∏–≥–≥–µ—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±–ª–æ–∫–∏—Ä—É—é—Ç –æ–ø–µ—Ä–∞—Ü–∏—é');
        } else {
          console.log('‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
          console.log(`   ID: ${newProfile.id}`);
          console.log(`   –ò–º—è: ${newProfile.name}`);
          console.log(`   Email: ${newProfile.email}`);
        }
      }
    }

    // 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–∏—Ç–∏–∫ RLS
    console.log('\n4Ô∏è‚É£  –ê–ù–ê–õ–ò–ó –ü–û–õ–ò–¢–ò–ö –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò');
    console.log('-'.repeat(35));
    
    console.log('üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ profiles...');
    
    // –¢–µ—Å—Ç SELECT
    const { error: selectError } = await supabase
      .from('profiles')
      .select('count')
      .limit(1);

    if (selectError) {
      console.log('‚ùå SELECT: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è -', selectError.message);
    } else {
      console.log('‚úÖ SELECT: –î–æ—Å—Ç—É–ø –¥–ª—è —á—Ç–µ–Ω–∏—è –µ—Å—Ç—å');
    }

    // –¢–µ—Å—Ç INSERT —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    const testId = crypto.randomUUID();
    const { error: insertError } = await supabase
      .from('profiles')
      .insert({
        id: testId,
        email: 'test@example.com',
        name: 'Test User',
        role: 'sales_rep'
      });

    if (insertError) {
      console.log('‚ùå INSERT: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è -', insertError.message);
    } else {
      console.log('‚úÖ INSERT: –î–æ—Å—Ç—É–ø –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –µ—Å—Ç—å');
      
      // –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
      await supabase
        .from('profiles')
        .delete()
        .eq('id', testId);
    }

    // 5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    console.log('\n5Ô∏è‚É£  –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ');
    console.log('-'.repeat(35));
    
    console.log('üîß –í–ê–†–ò–ê–ù–¢–´ –†–ï–®–ï–ù–ò–Ø:');
    console.log('');
    console.log('1. üìù –°–û–ó–î–ê–¢–¨ –¢–†–ò–ì–ì–ï–† –í –ë–ê–ó–ï –î–ê–ù–ù–´–•:');
    console.log('   –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    console.log('');
    console.log('2. üîì –û–ë–ù–û–í–ò–¢–¨ –ü–û–õ–ò–¢–ò–ö–ò RLS:');
    console.log('   –†–∞–∑—Ä–µ—à–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–≤–æ–∏ –ø—Ä–æ—Ñ–∏–ª–∏');
    console.log('');
    console.log('3. üõ†Ô∏è  –ò–°–ü–†–ê–í–ò–¢–¨ –ö–û–î –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø:');
    console.log('   –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å service role key –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π');
    console.log('');
    console.log('4. üìã –°–û–ó–î–ê–¢–¨ –ü–†–û–§–ò–õ–ò –í–†–£–ß–ù–£–Æ:');
    console.log('   –î–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –ø—Ä–æ—Ñ–∏–ª–µ–π');

    console.log('\nüí° –ù–ï–ú–ï–î–õ–ï–ù–ù–û–ï –†–ï–®–ï–ù–ò–ï:');
    console.log('   –Ø —Å–æ–∑–¥–∞–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–µ–∑ –Ω–∏—Ö');

  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

debugRegistrationIssue();
