#!/usr/bin/env node
import { createClient } from '@supabase/supabase-js';
import { config } from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config();

const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://olutrxiazrmanrgzzwmb.supabase.co';
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9sdXRyeGlhenJtYW5yZ3p6d21iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NzMwMjEsImV4cCI6MjA2NjQ0OTAyMX0.qxU_1Fjk4Mu9vMSfEI4jSGm3yYhh9WbmlSEFttOMKiM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function testStatusUpdate() {
  console.log('üß™ –¢–ï–°–¢ –û–ë–ù–û–í–õ–ï–ù–ò–Ø –°–¢–ê–¢–£–°–ê –ê–ì–ï–ù–¢–û–í\n');
  console.log('=' .repeat(45));

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤
    console.log('\n1Ô∏è‚É£  –ü–û–õ–£–ß–ï–ù–ò–ï –ê–ì–ï–ù–¢–û–í');
    console.log('-'.repeat(25));

    const { data: agents, error: agentsError } = await supabase
      .from('profiles')
      .select('*')
      .eq('role', 'sales_rep')
      .order('created_at', { ascending: false });

    if (agentsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–≥–µ–Ω—Ç–æ–≤:', agentsError);
      return;
    }

    if (!agents || agents.length === 0) {
      console.log('‚ö†Ô∏è  –ê–≥–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
      return;
    }

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∞–≥–µ–Ω—Ç–æ–≤: ${agents.length}`);
    
    agents.forEach((agent, index) => {
      console.log(`${index + 1}. ${agent.name} (${agent.email}) - ${agent.approved ? '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' : 'üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}`);
    });

    // 2. –í—ã–±–∏—Ä–∞–µ–º –∞–≥–µ–Ω—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const testAgent = agents[0];
    console.log(`\n2Ô∏è‚É£  –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –° –ê–ì–ï–ù–¢–û–ú: ${testAgent.name}`);
    console.log('-'.repeat(40));
    
    console.log(`üìã –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: ${testAgent.approved ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}`);
    
    // 3. –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å
    const newStatus = !testAgent.approved;
    console.log(`üîÑ –ú–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞: ${newStatus ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}`);
    
    const { data: updateResult, error: updateError } = await supabase
      .from('profiles')
      .update({ approved: newStatus })
      .eq('id', testAgent.id)
      .select();

    if (updateError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏:', updateError);
      return;
    }

    console.log('‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
    console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', updateResult);

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
    console.log('\n3Ô∏è‚É£  –ü–†–û–í–ï–†–ö–ê –ò–ó–ú–ï–ù–ï–ù–ò–ô');
    console.log('-'.repeat(25));

    const { data: updatedAgent, error: checkError } = await supabase
      .from('profiles')
      .select('*')
      .eq('id', testAgent.id)
      .single();

    if (checkError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', checkError);
      return;
    }

    console.log(`üìã –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: ${updatedAgent.approved ? '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' : 'üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω'}`);
    
    if (updatedAgent.approved === newStatus) {
      console.log('‚úÖ –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
    } else {
      console.log('‚ùå –°—Ç–∞—Ç—É—Å –Ω–µ –∏–∑–º–µ–Ω–∏–ª—Å—è!');
      console.log(`   –û–∂–∏–¥–∞–ª–∏: ${newStatus}`);
      console.log(`   –ü–æ–ª—É—á–∏–ª–∏: ${updatedAgent.approved}`);
    }

    // 5. –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    console.log('\n4Ô∏è‚É£  –í–û–ó–í–†–ê–¢ –ò–°–•–û–î–ù–û–ì–û –°–¢–ê–¢–£–°–ê');
    console.log('-'.repeat(30));

    await supabase
      .from('profiles')
      .update({ approved: testAgent.approved })
      .eq('id', testAgent.id);

    console.log('‚úÖ –ò—Å—Ö–æ–¥–Ω—ã–π —Å—Ç–∞—Ç—É—Å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');

    // 6. –ò—Ç–æ–≥–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∞–≥–µ–Ω—Ç–æ–≤
    console.log('\n5Ô∏è‚É£  –ò–¢–û–ì–û–í–û–ï –°–û–°–¢–û–Ø–ù–ò–ï –í–°–ï–• –ê–ì–ï–ù–¢–û–í');
    console.log('-'.repeat(40));

    const { data: finalAgents } = await supabase
      .from('profiles')
      .select('*')
      .eq('role', 'sales_rep')
      .order('created_at', { ascending: false });

    if (finalAgents) {
      finalAgents.forEach((agent, index) => {
        const status = agent.approved ? '‚úÖ –ê–∫—Ç–∏–≤–µ–Ω' : 'üîí –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω';
        console.log(`${index + 1}. ${agent.name} (${agent.email}) - ${status}`);
      });
    }

    console.log('\nüéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù –£–°–ü–ï–®–ù–û!');
    console.log('');
    console.log('üí° –ï–°–õ–ò –ü–†–û–ë–õ–ï–ú–´ –û–°–¢–ê–Æ–¢–°–Ø:');
    console.log('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ –æ—à–∏–±–∫–∏');
    console.log('   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä');
    console.log('   3. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞');
    console.log('   4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª–∏—Ç–∏–∫–∏ RLS –≤ Supabase');

  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testStatusUpdate();
