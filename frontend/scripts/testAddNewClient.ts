import { createClient } from '@supabase/supabase-js';
import * as dotenv from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Supabase –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–æ–≤
const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://olutrxiazrmanrgzzwmb.supabase.co';
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9sdXRyeGlhenJtYW5yZ3p6d21iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NzMwMjEsImV4cCI6MjA2NjQ0OTAyMX0.qxU_1Fjk4Mu9vMSfEI4jSGm3yYhh9WbmlSEFttOMKiM';

const supabase = createClient(supabaseUrl, supabaseAnonKey);

// –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Ç–æ—Ä–≥–æ–≤–æ–π —Ç–æ—á–∫–∏ (–∫–ª–∏–µ–Ω—Ç–∞) –æ—Ç –∏–º–µ–Ω–∏ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è
async function testAddNewClient() {
  console.log('üß™ –¢–µ—Å—Ç: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Ç–æ—Ä–≥–æ–≤–æ–π —Ç–æ—á–∫–∏ –æ—Ç –∏–º–µ–Ω–∏ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è');
  console.log('=' .repeat(70));

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    const { error: connectionError } = await supabase
      .from('profiles')
      .select('id')
      .limit(1);

    if (connectionError) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: ${connectionError.message}`);
    }
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ');

    // 2. –ü–æ–ª—É—á–∞–µ–º —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
    console.log('\n2Ô∏è‚É£ –ü–æ–∏—Å–∫ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è...');
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–∞–∫–∏–µ-—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    const { data: existingProfiles, error: existingError } = await supabase
      .from('profiles')
      .select('id, name, email, role')
      .limit(5);

    if (existingError) {
      throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${existingError.message}`);
    }

    console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ: ${existingProfiles?.length || 0}`);
    
    if (existingProfiles && existingProfiles.length > 0) {
      console.log('üë• –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:');
      existingProfiles.forEach(profile => {
        console.log(`   - ${profile.name} (${profile.email}) - ${profile.role}`);
      });
    }

    // –ò—â–µ–º —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è
    const { data: salesRep, error: salesRepError } = await supabase
      .from('profiles')
      .select('id, name, email, role')
      .eq('role', 'sales_rep')
      .limit(1)
      .single();

    if (salesRepError || !salesRep) {
      // –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ª—é–±–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      const { data: anyUser, error: anyUserError } = await supabase
        .from('profiles')
        .select('id, name, email, role')
        .limit(1)
        .single();

      if (anyUserError || !anyUser) {
        console.log('‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å –Ω–∞–ø—Ä—è–º—É—é...');
        
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π UUID –∏ –ø—Ä–æ—Ñ–∏–ª—å –Ω–∞–ø—Ä—è–º—É—é
        const testId = '550e8400-e29b-41d4-a716-446655440000'; // –°—Ç–∞—Ç–∏—á–Ω—ã–π UUID –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        const testEmail = 'test.salesrep@gmail.com';
        
        const { data: newProfile, error: profileError } = await supabase
          .from('profiles')
          .upsert({
            id: testId,
            name: '–¢–µ—Å—Ç–æ–≤—ã–π –¢–æ—Ä–≥–æ–≤—ã–π –ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å',
            email: testEmail,
            role: 'sales_rep'
          })
          .select()
          .single();

        if (profileError) {
          // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–æ–ø—Ä–æ–±—É–µ–º –µ–≥–æ –ø–æ–ª—É—á–∏—Ç—å
          const { data: existingProfile, error: getError } = await supabase
            .from('profiles')
            .select('*')
            .eq('id', testId)
            .single();
            
          if (getError) {
            throw new Error(`–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è/–ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è: ${profileError.message}`);
          }
          
          console.log('‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ç–µ—Å—Ç–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å:', existingProfile.name);
          await testAddClientProcess(existingProfile);
        } else {
          console.log('‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å:', newProfile.name);
          await testAddClientProcess(newProfile);
        }
      } else {
        console.log(`‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${anyUser.name} (—Ä–æ–ª—å: ${anyUser.role})`);
        // –í—Ä–µ–º–µ–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Ä–æ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        const { data: updatedUser, error: updateError } = await supabase
          .from('profiles')
          .update({ role: 'sales_rep' })
          .eq('id', anyUser.id)
          .select()
          .single();
          
        if (updateError) {
          console.log('‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ä–æ–ª—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞–∫ –µ—Å—Ç—å');
          await testAddClientProcess(anyUser);
        } else {
          console.log('‚úÖ –†–æ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –Ω–∞ sales_rep');
          await testAddClientProcess(updatedUser);
        }
      }
    } else {
      console.log('‚úÖ –ù–∞–π–¥–µ–Ω —Ç–æ—Ä–≥–æ–≤—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å:', salesRep.name);
      await testAddClientProcess(salesRep);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ:', error);
    process.exit(1);
  }
}

interface SalesRep {
  id: string;
  name: string;
  email: string;
  role: string;
}

async function testAddClientProcess(salesRep: SalesRep) {
  console.log(`\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞ –æ—Ç –∏–º–µ–Ω–∏: ${salesRep.name}`);
  
  // –î–∞–Ω–Ω—ã–µ –¥–ª—è –Ω–æ–≤–æ–π —Ç–æ—Ä–≥–æ–≤–æ–π —Ç–æ—á–∫–∏
  const newClientData = {
    name: `–¢–µ—Å—Ç–æ–≤–∞—è –¢–æ—Ä–≥–æ–≤–∞—è –¢–æ—á–∫–∞ ${Date.now()}`,
    company_name: '–¢–û–û "–¢–µ—Å—Ç–æ–≤–∞—è –ö–æ–º–ø–∞–Ω–∏—è"',
    address: '–≥. –ê–ª–º–∞—Ç—ã, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 123',
    seller_name: '–ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á',
    created_by: salesRep.id
  };

  console.log('üìù –î–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è:', {
    name: newClientData.name,
    company_name: newClientData.company_name,
    address: newClientData.address,
    seller_name: newClientData.seller_name,
    created_by: `${salesRep.name} (${salesRep.id})`
  });

  // 4. –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
  console.log('\n4Ô∏è‚É£ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...');
  const { data: newClient, error: clientError } = await supabase
    .from('clients')
    .insert(newClientData)
    .select()
    .single();

  if (clientError) {
    throw new Error(`–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞: ${clientError.message}`);
  }

  console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω:', {
    id: newClient.id,
    name: newClient.name,
    company_name: newClient.company_name,
    address: newClient.address,
    created_at: new Date(newClient.created_at).toLocaleString('ru-RU')
  });

  // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è
  console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞...');
  const { data: savedClient, error: checkError } = await supabase
    .from('clients')
    .select('*')
    .eq('id', newClient.id)
    .single();

  if (checkError) {
    throw new Error(`–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞: ${checkError.message}`);
  }

  // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞—Ç–µ–ª–µ –æ—Ç–¥–µ–ª—å–Ω–æ
  const { data: createdByProfile } = await supabase
    .from('profiles')
    .select('name, email')
    .eq('id', savedClient.created_by)
    .single();

  console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', {
    id: savedClient.id,
    name: savedClient.name,
    company_name: savedClient.company_name,
    address: savedClient.address,
    seller_name: savedClient.seller_name,
    created_by: createdByProfile?.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω',
    created_at: new Date(savedClient.created_at).toLocaleString('ru-RU')
  });

  // 6. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ –æ—Ç –∏–º–µ–Ω–∏ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è
  console.log('\n6Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è...');
  const { data: salesRepClients, error: listError } = await supabase
    .from('clients')
    .select('id, name, company_name, address, seller_name, created_at')
    .eq('created_by', salesRep.id)
    .order('created_at', { ascending: false });

  if (listError) {
    throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤: ${listError.message}`);
  }

  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${salesRepClients.length} –∫–ª–∏–µ–Ω—Ç–æ–≤ —É —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è:`);
  salesRepClients.forEach((client, index) => {
    console.log(`   ${index + 1}. ${client.name} (${client.company_name}) - ${client.address}`);
  });

  // 7. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞
  console.log('\n7Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞...');
  const updatedData = {
    seller_name: '–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á (–æ–±–Ω–æ–≤–ª–µ–Ω–æ)',
    address: newClient.address + ' (–æ–±–Ω–æ–≤–ª–µ–Ω–æ)'
  };

  const { data: updatedClient, error: updateError } = await supabase
    .from('clients')
    .update(updatedData)
    .eq('id', newClient.id)
    .eq('created_by', salesRep.id) // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    .select()
    .single();

  if (updateError) {
    throw new Error(`–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞: ${updateError.message}`);
  }

  console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω:', {
    id: updatedClient.id,
    name: updatedClient.name,
    seller_name: updatedClient.seller_name,
    address: updatedClient.address
  });

  // 8. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö
  console.log('\n8Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö...');
  
  // –¢–µ—Å—Ç —Å –ø—É—Å—Ç—ã–º –∏–º–µ–Ω–µ–º
  const { error: validationError } = await supabase
    .from('clients')
    .insert({
      name: '', // –ü—É—Å—Ç–æ–µ –∏–º—è
      address: '–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å',
      created_by: salesRep.id
    });

  if (validationError) {
    console.log('‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç - –ø—É—Å—Ç–æ–µ –∏–º—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ:', validationError.message);
  } else {
    console.log('‚ö†Ô∏è  –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∞ - –ø—É—Å—Ç–æ–µ –∏–º—è –ø—Ä–∏–Ω—è—Ç–æ');
  }

  // 9. –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
  console.log('\n9Ô∏è‚É£ –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...');
  const { data: totalClients, error: countError } = await supabase
    .from('clients')
    .select('id', { count: 'exact' });

  if (!countError) {
    console.log(`üìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: ${totalClients.length}`);
  }

  const { data: salesRepClientCount, error: repCountError } = await supabase
    .from('clients')
    .select('id', { count: 'exact' })
    .eq('created_by', salesRep.id);

  if (!repCountError) {
    console.log(`üë§ –ö–ª–∏–µ–Ω—Ç–æ–≤ —É ${salesRep.name}: ${salesRepClientCount.length}`);
  }

  console.log('\nüéâ –¢–µ—Å—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Ç–æ—Ä–≥–æ–≤–æ–π —Ç–æ—á–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
  console.log('=' .repeat(70));
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
testAddNewClient();
