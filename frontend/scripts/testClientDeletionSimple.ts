import dotenv from 'dotenv';
import { createClient } from '@supabase/supabase-js';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config();

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç Supabase –Ω–∞–ø—Ä—è–º—É—é
const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://olutrxiazrmanrgzzwmb.supabase.co';
const supabaseAnonKey = process.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9sdXRyeGlhenJtYW5yZ3p6d21iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzE4ODQ2MjEsImV4cCI6MjA0NzQ2MDYyMX0.3uVYpQsv_gIZEOJRcEBXVVJmNZFsRnrqMZ3pzKJsHBo';

const supabase = createClient(supabaseUrl, supabaseAnonKey);

async function testClientDeletion() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤...\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    const { data: connectionTest, error: connectionError } = await supabase
      .from('clients')
      .select('count')
      .limit(1);

    if (connectionError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', connectionError);
      return;
    }

    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ');

    // 2. –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –∫–ª–∏–µ–Ω—Ç—ã
    console.log('\n2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤...');
    const { data: clients, error: clientsError } = await supabase
      .from('clients')
      .select('*')
      .limit(5);

    if (clientsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤:', clientsError);
      return;
    }

    console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤:', clients?.length || 0);

    if (clients && clients.length > 0) {
      console.log('\nüìã –ü—Ä–∏–º–µ—Ä—ã –∫–ª–∏–µ–Ω—Ç–æ–≤:');
      clients.forEach((client, index) => {
        console.log(`   ${index + 1}. ${client.name} (ID: ${client.id})`);
      });
    }

    // 3. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
    console.log('\n3Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞...');
    const testClientData = {
      name: `–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è ${Date.now()}`,
      address: '—É–ª. –¢–µ—Å—Ç–æ–≤–∞—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è, –¥. 123',
      created_by: 'test-user-id'
    };

    const { data: newClient, error: createError } = await supabase
      .from('clients')
      .insert(testClientData)
      .select()
      .single();

    if (createError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞:', createError);
      console.log('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:');
      console.log('- –ö–æ–¥:', createError.code);
      console.log('- –°–æ–æ–±—â–µ–Ω–∏–µ:', createError.message);
      return;
    }

    console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω:', newClient.name, '(ID:', newClient.id + ')');

    // 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –∫–ª–∏–µ–Ω—Ç–∞ –∑–∞–∫–∞–∑—ã
    console.log('\n4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞...');
    const { data: clientOrders, error: ordersError } = await supabase
      .from('orders')
      .select('id')
      .eq('client_id', newClient.id);

    if (ordersError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–∫–∞–∑–æ–≤:', ordersError);
    } else {
      console.log('‚úÖ –ó–∞–∫–∞–∑–æ–≤ —É –∫–ª–∏–µ–Ω—Ç–∞:', clientOrders?.length || 0);
    }

    // 5. –ü—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
    console.log('\n5Ô∏è‚É£ –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞...');
    const { error: deleteError } = await supabase
      .from('clients')
      .delete()
      .eq('id', newClient.id);

    if (deleteError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞:', deleteError);
      console.log('\nüìã –ê–Ω–∞–ª–∏–∑ –æ—à–∏–±–∫–∏:');
      console.log('- –ö–æ–¥:', deleteError.code);
      console.log('- –°–æ–æ–±—â–µ–Ω–∏–µ:', deleteError.message);
      console.log('- –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏:', deleteError.details);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
      if (deleteError.message.includes('permission denied')) {
        console.log('üîí –ü—Ä–∏—á–∏–Ω–∞: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞');
        console.log('üí° –†–µ—à–µ–Ω–∏–µ: –ù—É–∂–Ω–æ –≤–æ–π—Ç–∏ –∫–∞–∫ –∞–¥–º–∏–Ω –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ–¥ —Ç–µ–∫—É—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º');
      } else if (deleteError.message.includes('Row Level Security')) {
        console.log('üîí –ü—Ä–∏—á–∏–Ω–∞: –û—à–∏–±–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ (RLS)');
        console.log('üí° –†–µ—à–µ–Ω–∏–µ: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã clients');
      } else if (deleteError.message.includes('foreign key')) {
        console.log('üîó –ü—Ä–∏—á–∏–Ω–∞: –ö–ª–∏–µ–Ω—Ç —Å–≤—è–∑–∞–Ω —Å –¥—Ä—É–≥–∏–º–∏ –∑–∞–ø–∏—Å—è–º–∏');
        console.log('üí° –†–µ—à–µ–Ω–∏–µ: –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã');
      }
      
      return;
    }

    console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!');

    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª–∏–µ–Ω—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω
    console.log('\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è...');
    const { data: deletedClient, error: finalCheckError } = await supabase
      .from('clients')
      .select('*')
      .eq('id', newClient.id)
      .single();

    if (finalCheckError && finalCheckError.code === 'PGRST116') {
      console.log('‚úÖ –ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö');
    } else if (deletedClient) {
      console.log('‚ùå –ö–ª–∏–µ–Ω—Ç –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    } else {
      console.log('‚ùì –ù–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', finalCheckError);
    }

    console.log('\nüéâ –¢–ï–°–¢ –£–î–ê–õ–ï–ù–ò–Ø –ó–ê–í–ï–†–®–ï–ù!');

  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testClientDeletion().catch(console.error);
