import { createClient } from '@supabase/supabase-js';
import dotenv from 'dotenv';

dotenv.config();

const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://olutrixazrmanrgzzwmb.supabase.co';
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9sdXRyeGlhenJtYW5yZ3p6d21iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NzMwMjEsImV4cCI6MjA2NjQ0OTAyMX0.qxU_1Fjk4Mu9vMSfEI4jSGm3yYhh9WbmlSEFttOMKiM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function diagnoseClientsDeletion() {
  console.log('üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤...\n');

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:');
    const { data: user } = await supabase.auth.getUser();
    
    if (user?.user) {
      console.log(`   ‚úÖ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${user.user.email}`);
      console.log(`   üìß ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${user.user.id}`);
    } else {
      console.log('   ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    }

    // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (user?.user) {
      console.log('\n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:');
      const { data: profile, error: profileError } = await supabase
        .from('profiles')
        .select('*')
        .eq('id', user.user.id)
        .single();

      if (profileError) {
        console.log('   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è:', profileError.message);
      } else {
        console.log(`   ‚úÖ –ü—Ä–æ—Ñ–∏–ª—å –Ω–∞–π–¥–µ–Ω: ${profile.name}`);
        console.log(`   üîë –†–æ–ª—å: ${profile.role}`);
        console.log(`   ‚úÖ –û–¥–æ–±—Ä–µ–Ω: ${profile.approved}`);
      }
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
    console.log('\n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤:');
    const { data: allClients, error: allClientsError } = await supabase
      .from('clients')
      .select('*')
      .order('created_at', { ascending: false });

    if (allClientsError) {
      console.log('   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤:', allClientsError.message);
    } else {
      console.log(`   üìä –í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤: ${allClients?.length || 0}`);
      
      if (allClients && allClients.length > 0) {
        console.log('\n   üìã –ü–µ—Ä–≤—ã–µ 5 –∫–ª–∏–µ–Ω—Ç–æ–≤:');
        allClients.slice(0, 5).forEach((client, index) => {
          console.log(`   ${index + 1}. ${client.name}`);
          console.log(`      ID: ${client.id}`);
          console.log(`      –ê–¥—Ä–µ—Å: ${client.address}`);
          console.log(`      –°–æ–∑–¥–∞–Ω: ${client.created_by ? client.created_by.slice(0, 8) + '...' : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}`);
          console.log(`      –î–∞—Ç–∞: ${new Date(client.created_at).toLocaleString('ru-RU')}`);
          console.log('');
        });
      }
    }

    // 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
    console.log('\n4Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞:');
    
    if (allClients && allClients.length > 0) {
      // –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      const testClient = allClients[allClients.length - 1];
      console.log(`   üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞: ${testClient.name}`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–∏ –∫–ª–∏–µ–Ω—Ç –≤ –∑–∞–∫–∞–∑–∞—Ö
      console.log('   üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞...');
      const { data: clientOrders, error: ordersError } = await supabase
        .from('orders')
        .select('id')
        .eq('client_id', testClient.id);
      
      if (ordersError) {
        console.log('   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–∫–∞–∑–æ–≤:', ordersError.message);
      } else {
        console.log(`   üìä –ó–∞–∫–∞–∑–æ–≤ —É –∫–ª–∏–µ–Ω—Ç–∞: ${clientOrders?.length || 0}`);
        
        if (clientOrders && clientOrders.length > 0) {
          console.log('   ‚ö†Ô∏è  –ö–ª–∏–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∑–∞–∫–∞–∑–∞—Ö - —É–¥–∞–ª–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ');
        } else {
          console.log('   ‚úÖ –ö–ª–∏–µ–Ω—Ç –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∑–∞–∫–∞–∑–∞—Ö - –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å');
        }
      }
      
      // –ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
      console.log('   üóëÔ∏è  –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è...');
      const { error: deleteError } = await supabase
        .from('clients')
        .delete()
        .eq('id', testClient.id);
      
      if (deleteError) {
        console.log('   ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', deleteError.message);
        console.log('   üìã –ö–æ–¥ –æ—à–∏–±–∫–∏:', deleteError.code);
        console.log('   üîç –î–µ—Ç–∞–ª–∏:', deleteError.details);
      } else {
        console.log('   ‚úÖ –ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω');
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞ –æ–±—Ä–∞—Ç–Ω–æ
        console.log('   üîÑ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞...');
        const { error: restoreError } = await supabase
          .from('clients')
          .insert([{
            id: testClient.id,
            name: testClient.name,
            company_name: testClient.company_name,
            seller_name: testClient.seller_name,
            address: testClient.address,
            created_by: testClient.created_by,
            created_at: testClient.created_at
          }]);
        
        if (restoreError) {
          console.log('   ‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è:', restoreError.message);
        } else {
          console.log('   ‚úÖ –ö–ª–∏–µ–Ω—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        }
      }
    }

    // 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º RLS –ø–æ–ª–∏—Ç–∏–∫–∏
    console.log('\n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ RLS –ø–æ–ª–∏—Ç–∏–∫:');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω –ª–∏ RLS –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã clients
    const { data: rlsInfo, error: rlsError } = await supabase
      .rpc('check_rls_policies', { table_name: 'clients' })
      .single();
    
    if (rlsError) {
      console.log('   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ RLS:', rlsError.message);
      console.log('   ‚ÑπÔ∏è  –í–æ–∑–º–æ–∂–Ω–æ, —Ñ—É–Ω–∫—Ü–∏—è check_rls_policies –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    } else {
      console.log('   ‚úÖ RLS –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞');
      console.log('   üìã –î–µ—Ç–∞–ª–∏:', rlsInfo);
    }

    // 6. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    console.log('\n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞:');
    
    if (user?.user) {
      // –ü—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
      console.log('   üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞...');
      const testClientData = {
        name: '–¢–ï–°–¢–û–í–´–ô –ö–õ–ò–ï–ù–¢ –î–õ–Ø –£–î–ê–õ–ï–ù–ò–Ø',
        address: '–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å',
        created_by: user.user.id
      };
      
      const { data: newClient, error: createError } = await supabase
        .from('clients')
        .insert([testClientData])
        .select()
        .single();
      
      if (createError) {
        console.log('   ‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞:', createError.message);
      } else {
        console.log('   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω:', newClient.name);
        
        // –ü—Ä–æ–±—É–µ–º —É–¥–∞–ª–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞
        console.log('   üóëÔ∏è  –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞...');
        const { error: deleteTestError } = await supabase
          .from('clients')
          .delete()
          .eq('id', newClient.id);
        
        if (deleteTestError) {
          console.log('   ‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞:', deleteTestError.message);
          console.log('   üìã –ö–æ–¥ –æ—à–∏–±–∫–∏:', deleteTestError.code);
          
          // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏
          if (deleteTestError.message.includes('permission denied')) {
            console.log('   üîê –ü–†–ò–ß–ò–ù–ê: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è');
          } else if (deleteTestError.message.includes('Row Level Security')) {
            console.log('   üîê –ü–†–ò–ß–ò–ù–ê: –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ Row Level Security');
          } else if (deleteTestError.message.includes('foreign key')) {
            console.log('   üîó –ü–†–ò–ß–ò–ù–ê: –ö–ª–∏–µ–Ω—Ç —Å–≤—è–∑–∞–Ω —Å –¥—Ä—É–≥–∏–º–∏ –∑–∞–ø–∏—Å—è–º–∏');
          } else {
            console.log('   ‚ùì –ü–†–ò–ß–ò–ù–ê: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
          }
        } else {
          console.log('   ‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω');
        }
      }
    }

    console.log('\nüìä –ò–¢–û–ì–û–í–´–ô –ê–ù–ê–õ–ò–ó:');
    console.log('‚îÅ'.repeat(40));
    
    // –í—ã–≤–æ–¥—ã
    if (user?.user) {
      console.log('‚úÖ –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    } else {
      console.log('‚ùå –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ù–ï –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    }
    
    console.log('\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ RLS –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã clients');
    console.log('2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ');
    console.log('3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ª–∏ –∫–ª–∏–µ–Ω—Ç—ã –≤ –∑–∞–∫–∞–∑–∞—Ö');
    console.log('4. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –º—è–≥–∫–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è (active=false)');

  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

diagnoseClientsDeletion();
