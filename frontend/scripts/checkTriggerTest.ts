import { createClient } from '@supabase/supabase-js';
import { config } from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config();

const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://olutrxiazrmanrgzzwmb.supabase.co';
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9sdXRyeGlhenJtYW5yZ3p6d21iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NzMwMjEsImV4cCI6MjA2NjQ0OTAyMX0.qxU_1Fjk4Mu9vMSfEI4jSGm3yYhh9WbmlSEFttOMKiM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkTriggerTest() {
  console.log('üîç –ü–†–û–í–ï–†–ö–ê –°–û–°–¢–û–Ø–ù–ò–Ø –¢–†–ò–ì–ì–ï–†–ê –ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï\n');
  console.log('=' .repeat(50));

  try {
    // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–π
    console.log('\n1Ô∏è‚É£  –¢–ï–ö–£–©–ï–ï –°–û–°–¢–û–Ø–ù–ò–ï –ü–†–û–§–ò–õ–ï–ô');
    console.log('-'.repeat(35));

    const { data: profilesBefore, error: profilesError } = await supabase
      .from('profiles')
      .select('*')
      .order('created_at', { ascending: false });

    if (profilesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª–µ–π:', profilesError);
      return;
    }

    console.log(`üìä –í—Å–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${profilesBefore?.length || 0}`);
    
    if (profilesBefore && profilesBefore.length > 0) {
      console.log('\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 3 –ø—Ä–æ—Ñ–∏–ª—è:');
      profilesBefore.slice(0, 3).forEach((profile, index) => {
        const status = profile.approved ? '‚úÖ' : '‚è≥';
        console.log(`   ${index + 1}. ${profile.name} (${profile.email}) ${status}`);
        console.log(`      –†–æ–ª—å: ${profile.role}, –°–æ–∑–¥–∞–Ω: ${new Date(profile.created_at).toLocaleString('ru-RU')}`);
      });
    }

    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é (–∏–º–∏—Ç–∏—Ä—É–µ–º —á–µ—Ä–µ–∑ Supabase Auth)
    console.log('\n2Ô∏è‚É£  –¢–ï–°–¢ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ì–û –°–û–ó–î–ê–ù–ò–Ø –ü–†–û–§–ò–õ–Ø');
    console.log('-'.repeat(45));

    const testEmail = `trigger.test.${Date.now()}@example.com`;
    const testPassword = 'test123456';
    const testName = '–¢–µ—Å—Ç –¢—Ä–∏–≥–≥–µ—Ä–∞ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π';

    console.log(`üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:`);
    console.log(`   üìß Email: ${testEmail}`);
    console.log(`   üë§ –ò–º—è: ${testName}`);
    console.log(`   üîê –ü–∞—Ä–æ–ª—å: ${testPassword}`);
    console.log('');

    // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é...');
    
    const { data: authData, error: authError } = await supabase.auth.signUp({
      email: testEmail,
      password: testPassword,
      options: {
        data: {
          full_name: testName,
        }
      }
    });

    if (authError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', authError);
      
      if (authError.message.includes('already registered')) {
        console.log('‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∞');
      } else if (authError.message.includes('email confirmation')) {
        console.log('‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞, —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email');
      }
    } else {
      console.log('‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
      if (authData.user) {
        console.log(`   üÜî User ID: ${authData.user.id}`);
        console.log(`   üìß Email: ${authData.user.email}`);
        console.log(`   üìù –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ:`, authData.user.user_metadata);
      }
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–∑–¥–∞–ª—Å—è –ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
    console.log('\n3Ô∏è‚É£  –ü–†–û–í–ï–†–ö–ê –°–û–ó–î–ê–ù–ò–Ø –ü–†–û–§–ò–õ–Ø –ß–ï–†–ï–ó –¢–†–ò–ì–ì–ï–†');
    console.log('-'.repeat(50));

    // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞
    console.log('‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏—è —Ç—Ä–∏–≥–≥–µ—Ä–∞ (3 —Å–µ–∫—É–Ω–¥—ã)...');
    await new Promise(resolve => setTimeout(resolve, 3000));

    const { data: profilesAfter, error: profilesAfterError } = await supabase
      .from('profiles')
      .select('*')
      .order('created_at', { ascending: false });

    if (profilesAfterError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', profilesAfterError);
      return;
    }

    console.log(`üìä –í—Å–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª–µ–π –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: ${profilesAfter?.length || 0}`);

    // –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Ñ–∏–ª–µ–π
    const profilesAdded = (profilesAfter?.length || 0) - (profilesBefore?.length || 0);
    
    if (profilesAdded > 0) {
      console.log(`üéâ –¢–†–ò–ì–ì–ï–† –†–ê–ë–û–¢–ê–ï–¢! –î–æ–±–∞–≤–ª–µ–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: ${profilesAdded}`);
      
      // –ò—â–µ–º –Ω–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å
      const newProfile = profilesAfter?.find(p => 
        p.email === testEmail || p.name === testName
      );

      if (newProfile) {
        console.log('\n‚úÖ –ù–æ–≤—ã–π –ø—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:');
        console.log(`   üÜî ID: ${newProfile.id}`);
        console.log(`   üìß Email: ${newProfile.email}`);
        console.log(`   üë§ –ò–º—è: ${newProfile.name}`);
        console.log(`   üè∑Ô∏è  –†–æ–ª—å: ${newProfile.role}`);
        console.log(`   ‚úÖ –û–¥–æ–±—Ä–µ–Ω: ${newProfile.approved ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log(`   üìÖ –°–æ–∑–¥–∞–Ω: ${new Date(newProfile.created_at).toLocaleString('ru-RU')}`);
      }
    } else {
      console.log('‚ö†Ô∏è  –ù–æ–≤—ã–µ –ø—Ä–æ—Ñ–∏–ª–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã');
      console.log('');
      console.log('üîç –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:');
      console.log('   1. –¢—Ä–∏–≥–≥–µ—Ä –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω –∏–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      console.log('   2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª –≤ —Å–∏—Å—Ç–µ–º–µ');
      console.log('   3. –ü–æ–ª–∏—Ç–∏–∫–∏ RLS –±–ª–æ–∫–∏—Ä—É—é—Ç —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è');
      console.log('   4. –¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ email –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ç—Ä–∏–≥–≥–µ—Ä–∞');
    }

    // 4. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–∏ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    console.log('\n4Ô∏è‚É£  –ü–û–°–õ–ï–î–ù–ò–ï –ü–†–û–§–ò–õ–ò (–î–õ–Ø –°–†–ê–í–ù–ï–ù–ò–Ø)');
    console.log('-'.repeat(40));

    if (profilesAfter && profilesAfter.length > 0) {
      console.log('üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ø—Ä–æ—Ñ–∏–ª–µ–π:');
      profilesAfter.slice(0, 5).forEach((profile, index) => {
        const isNew = !profilesBefore?.find(p => p.id === profile.id);
        const newLabel = isNew ? ' üÜï' : '';
        const status = profile.approved ? '‚úÖ' : '‚è≥';
        
        console.log(`   ${index + 1}. ${profile.name} (${profile.email}) ${status}${newLabel}`);
        console.log(`      –†–æ–ª—å: ${profile.role}, –°–æ–∑–¥–∞–Ω: ${new Date(profile.created_at).toLocaleString('ru-RU')}`);
      });
    }

    // 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–∫—É —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è
    console.log('\n5Ô∏è‚É£  –¢–ï–°–¢ –õ–û–ì–ò–ö–ò –¢–û–†–ì–û–í–û–ì–û –ü–†–ï–î–°–¢–ê–í–ò–¢–ï–õ–Ø');
    console.log('-'.repeat(45));

    const salesReps = profilesAfter?.filter(p => p.role === 'sales_rep') || [];
    console.log(`ü§ù –¢–æ—Ä–≥–æ–≤—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ: ${salesReps.length}`);

    if (salesReps.length > 0) {
      const testSalesRep = salesReps[0];
      console.log(`\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø –∫ –∫–ª–∏–µ–Ω—Ç–∞–º –¥–ª—è: ${testSalesRep.name}`);

      const { data: allClients, error: clientsError } = await supabase
        .from('clients')
        .select('*');

      if (clientsError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤:', clientsError);
      } else {
        console.log(`üìä –í—Å–µ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–Ω–æ: ${allClients?.length || 0}`);
        console.log('‚úÖ –¢–æ—Ä–≥–æ–≤—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ –≤–∏–¥—è—Ç –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞)');
      }
    }

    // 6. –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\n6Ô∏è‚É£  –ò–¢–û–ì–û–í–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø');
    console.log('-'.repeat(40));

    const triggerWorks = profilesAdded > 0;
    const hasValidSalesReps = salesReps.length > 0;

    console.log('üéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´:');
    console.log(`   ${triggerWorks ? '‚úÖ' : '‚ùå'} –¢—Ä–∏–≥–≥–µ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª–µ–π: ${triggerWorks ? '–†–ê–ë–û–¢–ê–ï–¢' : '–ù–ï –†–ê–ë–û–¢–ê–ï–¢'}`);
    console.log(`   ${hasValidSalesReps ? '‚úÖ' : '‚ùå'} –¢–æ—Ä–≥–æ–≤—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ –≤ —Å–∏—Å—Ç–µ–º–µ: ${hasValidSalesReps ? '–ï–°–¢–¨' : '–û–¢–°–£–¢–°–¢–í–£–Æ–¢'}`);
    console.log(`   ‚úÖ –õ–æ–≥–∏–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤: –ò–°–ü–†–ê–í–õ–ï–ù–ê`);
    console.log(`   ‚úÖ –ü–æ–ª–µ "–ü–æ–ª–Ω–æ–µ –∏–º—è" –≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: –î–û–ë–ê–í–õ–ï–ù–û`);

    if (triggerWorks && hasValidSalesReps) {
      console.log('\nüéâ –í–°–ï –°–ò–°–¢–ï–ú–´ –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!');
      console.log('');
      console.log('üåê –ú–æ–∂–µ—Ç–µ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ:');
      console.log('   1. –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:5173');
      console.log('   2. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      console.log('   3. –í–æ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª –ö–õ–ò–ï–ù–¢–´');
      console.log('   4. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∏–¥–∏—Ç–µ –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤');
    } else {
      console.log('\n‚ö†Ô∏è  –¢–†–ï–ë–£–ï–¢–°–Ø –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–ê–Ø –ù–ê–°–¢–†–û–ô–ö–ê');
      
      if (!triggerWorks) {
        console.log('');
        console.log('üîß –î–õ–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –¢–†–ò–ì–ì–ï–†–ê:');
        console.log('   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL —Å–∫—Ä–∏–ø—Ç–∞ –≤ Supabase');
        console.log('   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –Ω–µ—Ç –æ—à–∏–±–æ–∫ –≤ SQL Editor');
        console.log('   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª–∏—Ç–∏–∫–∏ RLS –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã profiles');
      }
    }

  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
}

checkTriggerTest();
