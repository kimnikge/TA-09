import { createClient } from '@supabase/supabase-js';
import { config } from 'dotenv';

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
config();

const supabaseUrl = process.env.VITE_SUPABASE_URL || 'https://olutrxiazrmanrgzzwmb.supabase.co';
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9sdXRyeGlhenJtYW5yZ3p6d21iIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTA4NzMwMjEsImV4cCI6MjA2NjQ0OTAyMX0.qxU_1Fjk4Mu9vMSfEI4jSGm3yYhh9WbmlSEFttOMKiM';

const supabase = createClient(supabaseUrl, supabaseKey);

async function analyzeProfilesTable() {
  console.log('üîç –ê–Ω–∞–ª–∏–∑ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Ç–∞–±–ª–∏—Ü—ã profiles...\n');

  try {
    // 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã profiles
    console.log('1. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ profiles...');
    
    const { data: profiles, error: profilesError } = await supabase
      .from('profiles')
      .select('*')
      .order('created_at', { ascending: true });

    if (profilesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–æ—Ñ–∏–ª–µ–π:', profilesError);
      return;
    }

    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ñ–∏–ª–µ–π: ${profiles?.length || 0}`);

    if (profiles && profiles.length > 0) {
      console.log('\nüìã –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ñ–∏–ª—è—Ö:');
      profiles.forEach((profile, index) => {
        console.log(`\n${index + 1}. –ü—Ä–æ—Ñ–∏–ª—å ${profile.id}:`);
        console.log(`   üè∑Ô∏è  –ò–º—è: ${profile.name || '–ù–ï –£–ö–ê–ó–ê–ù–û'}`);
        console.log(`   üìß Email: ${profile.email || '–ù–ï –£–ö–ê–ó–ê–ù–û'}`);
        console.log(`   üë§ –†–æ–ª—å: ${profile.role || '–ù–ï –£–ö–ê–ó–ê–ù–û'}`);
        console.log(`   ‚úÖ –û–¥–æ–±—Ä–µ–Ω: ${profile.approved ? '–î–∞' : '–ù–µ—Ç'}`);
        console.log(`   üìÖ –°–æ–∑–¥–∞–Ω: ${profile.created_at ? new Date(profile.created_at).toLocaleString('ru-RU') : '–ù–ï –£–ö–ê–ó–ê–ù–û'}`);
        console.log(`   üîÑ –û–±–Ω–æ–≤–ª–µ–Ω: ${profile.updated_at ? new Date(profile.updated_at).toLocaleString('ru-RU') : '–ù–ï –£–ö–ê–ó–ê–ù–û'}`);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –ø–æ–ª—è –ø—Ä–æ—Ñ–∏–ª—è
        console.log(`   üîç –í—Å–µ –ø–æ–ª—è:`, JSON.stringify(profile, null, 6));
      });
    }

    // 2. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è
    console.log('\n2. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è...');
    
    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const { data: existingTestUser, error: testUserError } = await supabase
      .from('profiles')
      .select('*')
      .eq('email', 'test.salesrep@example.com')
      .limit(1);

    if (testUserError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', testUserError);
      return;
    }

    if (existingTestUser && existingTestUser.length > 0) {
      console.log('‚ö†Ô∏è  –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç:', existingTestUser[0].name);
      return;
    }

    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è
    // –í–ê–ñ–ù–û: –ú—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–ø—Ä—è–º—É—é —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ profiles
    // –µ—Å–ª–∏ –æ–Ω–∞ —Å–≤—è–∑–∞–Ω–∞ —Å auth.users —á–µ—Ä–µ–∑ —Ç—Ä–∏–≥–≥–µ—Ä—ã –∏–ª–∏ RLS
    console.log('‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ü—Ä—è–º–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ profiles –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å');
    console.log('   –µ—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ —Å–≤—è–∑–∞–Ω–∞ —Å —Å–∏—Å—Ç–µ–º–æ–π –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ Supabase.');
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const testUserData = {
      id: crypto.randomUUID(), // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º UUID
      name: '–¢–µ—Å—Ç–æ–≤—ã–π –¢–æ—Ä–≥–æ–≤—ã–π –ü—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å',
      email: 'test.salesrep@example.com',
      role: 'sales_rep',
      approved: true,
      created_at: new Date().toISOString(),
      updated_at: new Date().toISOString()
    };

    const { data: newUser, error: createUserError } = await supabase
      .from('profiles')
      .insert(testUserData)
      .select()
      .single();

    if (createUserError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', createUserError);
      console.log('');
      console.log('üí° –í–û–ó–ú–û–ñ–ù–´–ï –ü–†–ò–ß–ò–ù–´:');
      console.log('   1. –¢–∞–±–ª–∏—Ü–∞ profiles —Å–≤—è–∑–∞–Ω–∞ —Å auth.users —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á');
      console.log('   2. –í–∫–ª—é—á–µ–Ω—ã –ø–æ–ª–∏—Ç–∏–∫–∏ RLS (Row Level Security)');
      console.log('   3. –ï—Å—Ç—å —Ç—Ä–∏–≥–≥–µ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –±–ª–æ–∫–∏—Ä—É—é—Ç –ø—Ä—è–º—É—é –≤—Å—Ç–∞–≤–∫—É');
      console.log('');
      console.log('üîß –†–ï–®–ï–ù–ò–Ø:');
      console.log('   1. –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ —Å–∏—Å—Ç–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Supabase');
      console.log('   2. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Admin API –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      console.log('   3. –ò–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
      
      // –ü–æ–ø—Ä–æ–±—É–µ–º –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (profiles && profiles.length > 0) {
        const firstUser = profiles[0];
        console.log(`\nüîÑ –ü–æ–ø—Ä–æ–±—É–µ–º –∏–∑–º–µ–Ω–∏—Ç—å —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${firstUser.name} –Ω–∞ sales_rep...`);
        
        const { data: updatedUser, error: updateError } = await supabase
          .from('profiles')
          .update({ role: 'sales_rep' })
          .eq('id', firstUser.id)
          .select()
          .single();

        if (updateError) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–æ–ª–∏:', updateError);
        } else {
          console.log('‚úÖ –†–æ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
          console.log(`   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${updatedUser.name} —Ç–µ–ø–µ—Ä—å —Ç–æ—Ä–≥–æ–≤—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å`);
        }
      }
    } else {
      console.log('‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ—Ä–≥–æ–≤—ã–π –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
      console.log(`   –ò–º—è: ${newUser.name}`);
      console.log(`   Email: ${newUser.email}`);
      console.log(`   –†–æ–ª—å: ${newUser.role}`);
    }

    // 3. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('\n3. –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ—Ä–≥–æ–≤—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–π...');
    
    const { data: finalProfiles, error: finalError } = await supabase
      .from('profiles')
      .select('*')
      .eq('role', 'sales_rep');

    if (finalError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–µ:', finalError);
    } else {
      console.log(`‚úÖ –¢–æ—Ä–≥–æ–≤—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ: ${finalProfiles?.length || 0}`);
      
      if (finalProfiles && finalProfiles.length > 0) {
        finalProfiles.forEach((profile, index) => {
          console.log(`   ${index + 1}. ${profile.name} (${profile.email})`);
        });
      }
    }

    console.log('\nüéØ –í–´–í–û–î–´:');
    console.log('');
    console.log('‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã profiles –≤–∫–ª—é—á–∞–µ—Ç –ø–æ–ª–µ name');
    console.log('‚úÖ –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å/–∏–∑–º–µ–Ω—è—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ä–æ–ª—å—é sales_rep');
    console.log('');
    console.log('üìù –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:');
    console.log('   1. –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ "–ò–º—è" –≤ —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏');
    console.log('   2. –ü—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å —Å –∏–º–µ–Ω–µ–º');
    console.log('   3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, —á—Ç–æ —Ç–æ—Ä–≥–æ–≤—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª–∏ –≤–∏–¥—è—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤');

  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', error);
  }
}

analyzeProfilesTable();
